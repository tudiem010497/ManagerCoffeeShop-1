@using NonFactors.Mvc.Grid
@using ManagerCoffeeShopASPNet.Class

@model ManagerCoffeeShopASPNet.Areas.Admin.Models.ImportExcel
@{
    ViewBag.Title = "ImportExcelFileCreatePayrollForAllEmployee";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/Assets/Admin/js/accountant.js"></script>

<h2 style="text-align:center;padding:10px">THÊM BẢNG LƯƠNG CHO NHÂN VIÊN BẰNG FILE EXCEL</h2>

<div class="row">
    <div id="viewContent" class="float-left col-md-8">
        @{
            if (TempData["ResultImportExcel"] != null)
            {
                <h5>@TempData["ResultImportExcel"]</h5>
            }
        }
        @using (Html.BeginForm("DoImportExcelFileCreatePayrollForAllEmployee", "Accountant", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="form-group">
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.file, new { type = "file" })
                    @Html.ValidationMessageFor(model => model.file)
                    <button id="submitButton" type="submit">Thêm</button>
                </div>
            </div>
        }
    </div>
    <div class="float-right col-md-4">
        @Html.ActionLink("Xuất danh sách NV", "ExportExcel", "Accountant", new { @class = "btn btn-sm btn-primary" })
    </div>
</div>

@{ 
    ConvertStatusEmployee c = new ConvertStatusEmployee();
}
<div>
    @(Html
        .Grid((IEnumerable<Employee>)ViewData["employees"]).Build(columns =>
        {
            columns.Add(e => e.Name).Titled("Tên nhân viên").Filterable(true);
            columns.Add(e => e.Email).Titled("Email");
            columns.Add(e => e.Address).Titled("Địa chỉ");
            columns.Add(e => e.Phone).Titled("Số điện thoại");
            columns.Add(e => c.ConvertGender(e.Gender)).Titled("Giới tính");
            columns.Add(e => e.IndentityNum).Titled("CMND");
            columns.Add(e => c.ConvertStatus(e.Status)).Titled("Trạng thái");
            columns.Add(e => e.EmployeeID).Encoded(false).RenderedAs(e => (
                Html.ActionLink("Thêm bảng lương", "CreatePayroll", "Accountant", new { EmployeeID = e.EmployeeID }, new { @class = "btn btn-sm btn-outline-primary" }).ToHtmlString()
                + Html.ActionLink("Xem chi tiết bảng lương", "DetailPayRoll", "Accountant", new { EmployeeID = e.EmployeeID }, new { @class = "btn btn-sm btn-outline-success" }).ToHtmlString()

            ));
        })
        .Empty("Không có dữ liệu.")
        .Sortable()
        .Pageable(pager =>
        {
            pager.RowsPerPage = 6;
        })
    )
</div>
