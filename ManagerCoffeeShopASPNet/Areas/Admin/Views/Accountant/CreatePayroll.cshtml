@model ManagerCoffeeShopASPNet.Areas.Admin.Models.PayrollModel
@using ManagerCoffeeShopASPNet.Enum

@{
    ViewBag.Title = "CreatePayroll";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/Assets/Admin/js/accountant.js"></script>
<br />
<h2 style="text-align:center">Tạo bảng lương cho nhân viên</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        <input type="hidden" id="employeeID" value="@ViewData["EmployeeID"]" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Tên nhân viên", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" value="@ViewData["EmployeeName"]" class="form-control" id="employeename" disabled />
                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Chức vụ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" value="@ViewData["Position"]" class="form-control" id="Position" hidden />
                <input type="text" value="@ViewData["PositionDisplay"]" class="form-control" id="Position" disabled />
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Lương cơ bản", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" value="@ViewData["BasicSalary"]" class="form-control" id="BasicSalary" disabled />
                @Html.ValidationMessageFor(model => model.BasicSalary, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Số ngày/giờ/tháng làm việc", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewData["WorkDay"] != null)
                {
                    <input type="number" value="@ViewData["WorkDay"]" class="form-control" id="WorkDay" />
                }
                else
                {
                    <input type="number" class="form-control" id="WorkDay" />
                }
                @Html.ValidationMessageFor(model => model.WorkDay, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Đơn vị tính", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" value="@ViewData["SalaryType"]" class="form-control" readonly id="SalaryType" />
                @Html.ValidationMessageFor(model => model.SalaryType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Tiền thưởng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" class="form-control" id="Bonus" />
                @Html.ValidationMessageFor(model => model.Bonus, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Tiền phạt", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" class="form-control" id="Penalty" />
                @Html.ValidationMessageFor(model => model.Penalty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Ghi chú", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="form-control" id="Desc" />
                @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Tổng cộng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row col-md-10">
            <div class="col-md-7" id="sum">
                <input type="text" class="form-control" id="Total" value="0" readonly />
            </div>
            <div class="col-md-5">
                <button type="button" class="btn btn-sm btn-outline-success preCreatePayroll">Tính tổng</button>
            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-sm-4" style="float:right">
            <button type="submit" value="Create" class="btn btn-outline-info createPayroll" data-toggle='modal' data-target='#modalOptionPayroll'>Tạo</button>
            @*@Html.ActionLink("Create", "DoCreatePayroll", "Accountant", new { EmployeeID = ViewData["EmployeeID"]}, new { @class="btn btn-primary"})*@
        </div>
        <div class="col-md-offset-2 col-sm-4">
            @Html.ActionLink("Trở về", "GetAllEmployee", "Web")
        </div>
    </div>
}