@model IEnumerable<ManagerCoffeeShopASPNet.OrderItem>
@using ManagerCoffeeShopASPNet.Enum
@using NonFactors.Mvc.Grid
@{
    ViewBag.Title = "UpdateStatusOfOrderItemOnline";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<br />
<h2 style="text-align:center">CHI TIẾT DANH SÁCH CẦN XÁC NHẬN</h2>
<br />

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.OrderID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FDID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Desc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FDID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Desc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("Confirm", "Confirm", new { OrderItemID = item.OrderItemID }, new { @class = "btn btn-outline-success" })
                @Html.ActionLink("Cancel", "Cancel", new { OrderItemID = item.OrderItemID }, new { @class = "btn btn-outline-danger" })
            </td>
        </tr>
    }
</table>

<div style="float:right">
    <a class="btn btn-outline-info" href="@Url.Action("ConfirmAll", "Service", new { OrderID = ViewData["OrderID"]})">Ok</a>
</div>*@

<div >
    @(Html
        .Grid(Model)
        .Build(column =>
        {
            column.Add(m => m.OrderID).Titled("Mã hóa đơn").Sortable(false);
            column.Add(m => m.FDID).Titled("Mã đồ uống");
            column.Add(m => m.Quantity).Titled("Số lượng");
            column.Add(m => m.Desc).Titled("Ghi chú").Filterable(false);
            column.Add(m => m.Status).Titled("Trạng thái").Filterable(false);
            column.Add(m => m.OrderID).Encoded(false).RenderedAs(m => (
                @Html.ActionLink("Xác nhận", "Confirm", new { OrderItemID = m.OrderItemID }, new { @class = "btn btn-sm btn-outline-success" }).ToHtmlString()
                + " "+ @Html.ActionLink("Hủy", "Cancel", new { OrderItemID = m.OrderItemID }, new { @class = "btn btn-sm btn-outline-danger" }).ToHtmlString()
            )).Filterable(false).Sortable(false);
        })
        .Sortable()
        .Empty("Data is empty")
        .Filterable()
    )
</div><br />
<div class="row">
    <div class="col-md-9">
        @Html.ActionLink("Trở về", "GetAllOrderOnlineNeedConfirm")
    </div>
    <div class="col-md-3">
        <a class="btn btn-sm btn-outline-info" href="@Url.Action("ConfirmAll", "Service", new { OrderID = ViewData["OrderID"]})">Hoàn tất</a>
    </div>
</div>