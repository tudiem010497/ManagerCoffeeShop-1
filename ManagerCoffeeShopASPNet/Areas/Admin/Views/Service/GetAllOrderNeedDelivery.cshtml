@model IEnumerable<ManagerCoffeeShopASPNet.Order>
@using NonFactors.Mvc.Grid
@{
    ViewBag.Title = "GetAllOrderNeedDelivery";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<br />
<h2 style="text-align:center">DANH SÁCH HÓA ĐƠN CẦN GIAO</h2>
<br />

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CustomerID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PosID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderDateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PaidDateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DiscountMoney)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TotalAmount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Currency)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Desc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CustomerID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PosID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrderDateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PaidDateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DiscountMoney)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Currency)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Desc)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.ActionLink("Xem Chi tiết", "DetailOrderNeedSevice", "Service", new { OrderID = item.OrderID }, new { @class = "btn btn-primary btnDetailOrder" })
            @Html.ActionLink("Xác nhận giao hàng", "ConfirmDelivery", new { OrderID = item.OrderID}, new { @class = "btn btn-outline-success"})
        </td>
    </tr>
}
</table>*@

<div>
    @(Html
        .Grid(Model)
        .Build(column =>
        {
            column.Add(m => m.CustomerID).Titled("Mã KH").Sortable(false);
            column.Add(m => m.PosID).Titled("Vị trí");
            column.Add(m => m.OrderDateTime).Titled("Ngày giờ đặt");
            column.Add(m => m.PaidDateTime).Titled("Ngày giờ giao").Filterable(false);
            column.Add(m => m.DiscountMoney).Titled("Giảm giá").Filterable(false);
            column.Add(m => m.TotalAmount).Titled("Tổng tiền").Filterable(false);
            column.Add(m => m.Currency).Titled("Đơn vị tiền").Filterable(false);
            column.Add(m => m.Desc).Titled("Ghi chú").Filterable(false);
            column.Add(m => m.Status).Titled("Trạng thái").Filterable(false);
            column.Add(m => m.OrderID).Encoded(false).RenderedAs(m => (
                @Html.ActionLink("Xem Chi tiết", "DetailOrderNeedSevice", "Service", new { OrderID = m.OrderID }, new { @class = "btn btn-sm btn-primary btnDetailOrder" }).ToHtmlString()
                + " " + @Html.ActionLink("Xác nhận giao hàng", "ConfirmDelivery", new { OrderID = m.OrderID }, new { @class = "btn btn-sm btn-outline-success" }).ToHtmlString()
            )).Filterable(false).Sortable(false);
        })
        .Sortable()
        .Empty("Không có dữ liệu.")
        .Filterable()
    )
</div>
