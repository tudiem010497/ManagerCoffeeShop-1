@{
    ViewBag.Title = "CreateDiagram";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script type="text/javascript" src="http://beneposto.pl/jqueryrotate/js/jQueryRotateCompressed.js"></script>
@*<script type="text/javascript" src="~/Assets/Admin/jQuery-Plugin-For-Rotating-Html-Elements-multirotation/jquery.multirotation-1.0.0.js"></script>*@
<link href="https://fonts.googleapis.com/css?family=Erica+One" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
<link rel="stylesheet" href="~/Assets/Admin/js/edit-text-svg-js/style.css">
<script src='https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.10/vue.min.js'></script>
<script src="~/Assets/Admin/js/edit-text-svg-js/script.js"></script>
<h2>CreateDiagram</h2>
@Html.ActionLink("Xem các sơ đồ quán hiện có", "ViewDiagram", "Web", new { @CLSID = 0},new { @class = "btn btn-outline-info"})
<div id= "viewDiagram">
    <div class="row">
        <div id="information" class="col-sm-2">
            <form action="/admin/Web/CreateDiagram" method="post">
                <div class="form-group">
                    <label for="width">Chiều rộng: </label>
                    <input type="number" class="form-control" id="width" name="width" value="@ViewData["width"]">
                </div>
                <div class="form-group">
                    <label for="height">Chiều dài:</label>
                    <input type="number" class="form-control" id="height" name="height" value="@ViewData["height"]">
                </div>
                <div class="form-group">
                    <label for="ratio">Tỷ lệ</label>
                    <input class="form-control" id="ratio" name="ratio" value="@ViewData["ratio"]">
                </div>
                <div class="form-group">
                    @Html.Label("Chi nhánh", htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@Html.EditorFor(model => model.CSID, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownList("CSID", (List<SelectListItem>)ViewData["listCoffeeShop"], new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="ratio">Tầng</label>
                    <input class="form-control" id="FoorID" name="ratio" value="@ViewData["FoorID"]">
                </div>
                <button type="submit" class="btn btn-outline-primary">Nhập</button>
            </form>
        </div>
        <div class="col-sm-10">
            <img src="~/Assets/Admin/image/diagram/bank-one-000.png" class="draggable draggable-droppable"/>
            <img src="~/Assets/Admin/image/diagram/bank-two-000.png" class="draggable draggable-droppable" /> 
            <img src="~/Assets/Admin/image/diagram/bookshelt-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/chair-1-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/chair-2-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/desk-four-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/desk-six-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/door-left-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/door-right-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/door-two-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/plan-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/table-four-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/table-round-four-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/table-round-six-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/table-six-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/table-two-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/table-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/toilet-000.png" class="draggable draggable-droppable" />
            <img src="~/Assets/Admin/image/diagram/work-place-000.png" class="draggable draggable-droppable" />
        </div>
    </div>
    @*<div class="container">
        @if (float.Parse(ViewData["width"].ToString()) != 0 && float.Parse(ViewData["height"].ToString()) != 0)
        {
            int ratio = (int)Math.Floor(1 / float.Parse(ViewData["ratio"].ToString()));
            int width = (int)Math.Floor(float.Parse(ViewData["width"].ToString())) * ratio;
            int height = (int)Math.Floor(float.Parse(ViewData["height"].ToString())) * ratio;
            <svg class="dropzone resizable"
                 id="svg-dropzone"
                 viewBox="0 0 @width @height"
                 width="@width"
                 height="@height" xmlns="http://www.w3.org/2000/svg">
                <defs>
                    <pattern id="smallGrid" width="10" height="10" patternUnits="userSpaceOnUse">
                        <path d="M 10 0 L 0 0 0 10" fill="none" stroke="gray" stroke-width="0.5" />
                    </pattern>
                    <pattern id="grid" width="100" height="100" patternUnits="userSpaceOnUse">
                        <rect width="100" height="100" fill="url(#smallGrid)" />
                        <path d="M 100 0 L 0 0 0 100" fill="none" stroke="gray" stroke-width="1" />
                    </pattern>
                </defs>
                
                <rect width="100%" height="100%" fill="url(#grid)" />
            </svg>
        }
       </div>*@
    <style>
        .edit-text{
            fill: url(#svg-dropzone);
            font-size: 20px;
            stroke: black;
            text-anchor: middle;
        }
    </style>
    <div contenteditable id="app">
        @if (float.Parse(ViewData["width"].ToString()) != 0 && float.Parse(ViewData["height"].ToString()) != 0)
        {
            int ratio = (int)Math.Floor(1 / float.Parse(ViewData["ratio"].ToString()));
            int width = (int)Math.Floor(float.Parse(ViewData["width"].ToString())) * ratio;
            int height = (int)Math.Floor(float.Parse(ViewData["height"].ToString())) * ratio;
            <svg class="dropzone resizable"
                 id="svg-dropzone"
                 viewBox="0 0 @width @height"
                 width="@width"
                 height="@height" 
                  patternUnits="userSpaceOnUse"
                 xmlns="http://www.w3.org/2000/svg">
                <defs>
                    <pattern id="smallGrid" width="10" height="10" patternUnits="userSpaceOnUse">
                        <path d="M 10 0 L 0 0 0 10" fill="none" stroke="gray" stroke-width="0.5" />
                    </pattern>
                    <pattern id="grid" width="100" height="100" patternUnits="userSpaceOnUse">
                        <rect width="100" height="100" fill="url(#smallGrid)" />
                        <path d="M 100 0 L 0 0 0 100" fill="none" stroke="gray" stroke-width="1" />
                    </pattern>
                </defs>
                <rect class="test" width="100%" height="100%" fill="url(#grid)" />
                <text x="50" y="250" @*fill="url(#svg-dropzone)" font-size="20" stroke="black" text-anchor="middle"*@ class="edit-text">Bàn số</text>
                @*<text x="100" y="200" fill="url(#svg-dropzone)" font-size="20" stroke="black" text-anchor="middle">Bàn số</text>*@
                
            </svg>
        }
    </div>
    <div id="contextMenu" class="dropdown clearfix">
        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu" style="display:block;position:static;margin-bottom:5px;">
            <li>
                <a tabindex="-1" href="#" id="delete">Xóa</a>

            </li>
            <li>
                <a tabindex="-1" href="#" id="rotate-right">Xoay </a>
            </li>
            <li>
                <a tabindex="-1" id="add-text">Thêm text</a>
            </li>
        </ul>
    </div>
    @*<div contenteditable id="app">
        <svg viewBox="0 0 500 500">
            <defs>
                <pattern id="svg-dropzone"
                         viewBox="0 0 300 300"
                         patternUnits="userSpaceOnUse"
                         width="250" height="300"
                         x="0" y="0">
                    
                </pattern>
            </defs>

            <text  x="50" y="250" fill="url(#svg-dropzone)" font-size="20" stroke="black" text-anchor="middle">abc</text>
        </svg>
    </div>*@
    <style type="text/css">
        #contextMenu {
          position: absolute;
          display: none;
        }
    </style>
    
    <script>
        $(function () {
            var $contextMenu = $("#contextMenu");
            var test
            $("body").on("contextmenu", "image", function (e) {
                $contextMenu.css({
                    display: "block",
                    left: e.pageX,
                    top: e.pageY
                });
                test = $(this)
                
                return false;
            });
            $(document).ready(function () {
                $("#delete").click(function () {
                    test.remove()
                })
                $("#rotate-right").click(function () {
                    //test.css({
                    //    "-ms-transform": "rotate(90deg)", /* IE 9 */
                    //    "-webkit-transform": "rotate(90deg)", /* Safari 3-8 */
                    //    "transform": "rotate(90deg)"
                    //})
                    //test.rotate(90);
                    //test.toggleClass('flip');
                    return false;
                })
                $("#add-text").click(function () {
                    console.log("abc")
                    $('<text class="a">Bàn số</text>').insertAfter('.test')
                    //    $('.a').attr({
                    //    'x': '100',
                    //    'y': '50',
                    //    'fill': 'url(#svg-dropzone)',
                    //    'font-size':'20',
                    //    'stroke': 'black',
                    //    'text-anchor': 'middle'
                    //})
                    $('.a').addClass('edit-text')
                })
                //$("#rotate-right").rotate({
                //    bind: {
                //        click: function () {
                //            test.rotate({
                //                angle: 0,
                //                animateTo: 90
                //            })
                //            var widthImage = test.attr("width")
                //            var heightImage = test.attr("height")
                //            var xImage = test.attr("x")

                //            test.attr("width", widthImage)
                //            test.attr("height", heightImage)
                //        }
                //    }
                    
                //});
                $("#rotate-right").click(function () {
                    var xlink = test.attr("xlink:href")
                    var width = test.attr("width")
                    var height = test.attr("height")
                    var rotate = test.attr("rotate")
                    if (rotate == null) {
                        rotate = "090"
                    }
                    else {
                        if(0 <= Number(rotate) && Number(rotate) < 270){                            
                            if (Number(rotate) == 0) rotate = "090"
                            else rotate = Number(rotate) + 90
                        }
                            
                        else rotate = "000"
                    }
                    test.attr("rotate", rotate.toString())
                    xlink = xlink.substr(0, xlink.indexOf(".png"))
                    xlink = xlink.slice(0, -4)
                    var newXlink =  xlink + "-" + rotate + ".png"
                    test.attr("width", height)
                    test.attr("height", width)
                    test.attr("xlink:href", newXlink)
                })
            })
            
            $('html').click(function () {
                $contextMenu.hide();
            });

        });
    </script>
</div>
<script src='https://cdnjs.cloudflare.com/ajax/libs/interact.js/1.2.9/interact.min.js'></script>
<script src="~/Assets/Admin/drag-drop-plugin/js/index.js"></script>
