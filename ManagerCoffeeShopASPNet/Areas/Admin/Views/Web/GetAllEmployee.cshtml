@model IEnumerable<ManagerCoffeeShopASPNet.Employee>
@using NonFactors.Mvc.Grid
@using ManagerCoffeeShopASPNet.Class
@{
    ViewBag.Title = "GetAllEmployee";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2 style="text-align:center; padding:10px;">DANH SÁCH NHÂN VIÊN</h2>
<div class="row" style="padding-bottom:10px;">
    <div class="col-sm-7">
        @Html.ActionLink("Thêm nhân viên", "GetFormAddNewEmployee", "Web", new { @class = "btn btn-outline-primary" })
    </div>
    <div class="col-sm-5">
        @using (Html.BeginForm("Web", "GetAllEmployee", FormMethod.Get))
        {
            @Html.TextBox("Search")
            <button type="submit">Tìm kiếm</button>
        }
    </div>
</div>

@if (TempData["messageSuccess"] != null)
{
    <div class="alert alert-success">@TempData["messageSuccess"]</div>
}
@if (TempData["messageFail"] != null)
{
    <div class="alert alert-danger">@TempData["messageFail"]</div>
}

<table class="table-bordered mvc-grid ">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Chi nhánh")
            </th>
            <th>
                @Html.DisplayName("Tên nhân viên")
            </th>
            <th>
                @Html.DisplayName("Trạng thái")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CoffeeShop.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                   @{ 
                       ConvertStatusEmployee test = new ConvertStatusEmployee();
                       string a = test.ConvertStatus(item.Status).ToString();
                   }
                    @*@Html.Display(a)*@
                    @a
                </td>
                <td>
                    @Html.ActionLink("Chi tiết", "DetailEmployee", "Web", new { EmployeeID = item.EmployeeID }, new { @class = "btn btn-sm btn-outline-info " })
                    @if (item.UserID != null)
                    {
                        @Html.ActionLink("Xem tài khoản", "ViewAccountInformation", "Web", new { UserID = item.UserID }, new { @class = "btn btn-sm btn-outline-success " })
                        @*<input type="button" disabled value="Tạo tài khoản" class="btn btn-sm btn-outline-warning text-dark btn-sm createAccount" onclick="location.href(@Url.Action("GetFormAddNewAccountForEmployee", "Web", new { @EmployeeID = item.EmployeeID }))" />*@
                        @Html.ActionLink("Thêm bảng lương", "CreatePayroll", "Accountant", new { EmployeeID = item.EmployeeID }, new { @class = "btn btn-sm btn-outline-success" })
                        @Html.ActionLink("Chi tiết bảng lương", "DetailPayrollOfEmployee", "Accountant", new { EmployeeID = item.EmployeeID }, new { @class = "btn btn-sm btn-outline-success" })
                    }
                    else
                    {
                        @Html.ActionLink("Tạo tài khoản", "GetFormAddNewAccountForEmployee", "Web", new { EmployeeID = item.EmployeeID }, new { @class = "btn btn-sm btn-outline-warning text-dark btn-sm" })
                        @*<input type="button" disabled value="Thêm bảng lương" class="btn btn-sm btn-outline-success" onclick="location.href(@Url.Action("CreatePayroll", "Accountant", new { @EmployeeID = item.EmployeeID }))" />*@
                    }
                    @if (item.UserID != null)
                    {
                        
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@*<div>
        @(Html
            .Grid(Model)
            .Build(column =>
            {
            column.Add(m => m.UserID).Css("userID");
            column.Add(m => m.CoffeeShop.Name).Titled("Chi nhánh");
            column.Add(m => m.Name).Titled("Tên nhân viên");
            column.Add(m => m.Status).Titled("Trạng thái");
            column.Add(m => m.EmployeeID).Encoded(false).RenderedAs(m => (
                @Html.ActionLink("Chi tiết", "DetailEmployee", "Web", new { EmployeeID = m.EmployeeID }, new { @class = "btn btn-sm btn-outline-info " }).ToHtmlString()
            + " " + @Html.ActionLink("Thêm bảng lương", "CreatePayroll", "Accountant", new { EmployeeID = m.EmployeeID }, new { @class = "btn btn-sm btn-outline-success" }).ToHtmlString()
            + " " + @Html.ActionLink("Chi tiết bảng lương", "DetailPayrollOfEmployee", "Accountant", new { EmployeeID = m.EmployeeID }, new { @class = "btn btn-sm btn-outline-success" })
                //+ " " + @Html.ActionLink("Tạo tài khoản", "GetFormAddNewAccountForEmployee", "Web", new { EmployeeID = m.EmployeeID }, new { @class = "btn btn-sm btn-outline-warning text-dark btn-sm createAccount", UserID=m.UserID }).ToHtmlString()
            + " " + "<input type='button' disabled value='Tạo tài khoản' class='btn btn-sm btn-outline-warning text-dark btn-sm createAccount' onclick='location.href = '"
            + Url.Action("", "", new { @EmployeeID = m.EmployeeID }) + "/>"
            + " " + @Html.ActionLink("Xem tài khoản", "ViewAccountInformation", "Web", new { UserID = m.UserID }, new { @class = "btn btn-sm btn-outline-success " }).ToHtmlString()
                )).Filterable(false).Sortable(false);
            })
            .Empty("Không có dữ liệu.")
            .Filterable()
            .Pageable(pager =>
            {
                pager.RowsPerPage = 6;
            })
        )
    </div>*@
<style>
    /*.userID{
        display:none;
    }*/
    .fixed_header {
        table-layout: fixed;
        border-collapse: collapse;
    }
    .mvc-grid tbody{
        display:block;
        overflow:auto;
        height:400px;
    }
    .mvc-grid thead tr{
        display:block;
    }
        .fixed_header tbody {
            display: block;
            width: 100%;
            overflow: auto;
            height: 400px;
        }

        .fixed_header thead tr {
            display: block;
        }

        .fixed_header thead {
            background: #f7f7f7;
        }
        .mvc-grid th, .mvc-grid td{
            padding:5px;
            width:270px;
        }
        /*.fixed_header th,*/ .fixed_header td {
            padding: 5px;
            text-align: left;
            width: 300px;
        }
        .fixed_header th/*, .fixed_header td*/ {
            padding-top: 5px;
            padding-bottom:5px;
            text-align: left;
            width: 295px;
        }
</style>
@*<script>
        //$(".createAccount").click(function () {
        //    var UserID = $("div .userID").val();
        //    alert(UserID);

        $(document).ready(function () {
            $('#dtVerticalScrollExample').DataTable({
                "scrollY": "200px",
                "scrollCollapse": true,
            });
            $('.dataTables_length').addClass('bs-select');
        })
    </script>*@