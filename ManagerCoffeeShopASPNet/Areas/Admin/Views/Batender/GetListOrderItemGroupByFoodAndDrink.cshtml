@*@model List<ManagerCoffeeShopASPNet.Areas.Admin.Models.OrderItemGroupByFoodAndDrink>*@

@model IEnumerable<ManagerCoffeeShopASPNet.OrderItem>
@using NonFactors.Mvc.Grid

@{
    ViewBag.Title = "GetListOrderItemGroupByFoodAndDrink";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@*<table class="table table-striped">
    <tr>
        <th>Tên đồ uống</th>
        <th>Số lượng</th>
        <th>Chi tiết</th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.FoodAndDrink.FDID && @item.FoodAndDrink.Name</td>
            <td>@item.Quantity</td>
            <td>
                @foreach (var orderItem in item.OrderItems)
                {
                    <table class="table">
                        <tr>
                            <td>Vị trí :@orderItem.OrderItemID</td>
                            <td>Desc : @orderItem.Desc</td>
                            <td>Thời gian chờ : @DateTime.Now.Subtract(orderItem.Order.OrderDateTime).TotalMinutes</td>
                            <td>Số lượng : @orderItem.Quantity</td>
                            <td>
                                @Html.ActionLink("Xong", "UpdateReady", "Batender", new { OrderItemID = orderItem.OrderItemID, OrderID = orderItem.OrderID, view = "GetListOrderItemGroupByFoodAndDrink" , NumOfOrderItem = 0 }, new { @class = "btn btn-success" })
                                @Html.ActionLink("Hủy", "UpdateCancel", "Batender", new { OrderItemID = orderItem.OrderItemID, OrderID = orderItem.OrderID, view = "GetListOrderItemGroupByFoodAndDrink" , NumOfOrderItem = 0 }, new { @class = "btn btn-danger btnCancel" })
                            </td>
                        </tr>
                    </table>
                }
            </td>
            <td>
            @Html.ActionLink("Xem công thức pha chế", "ReadRecipe", "Batender", new { FDID = item.FoodAndDrink.FDID }, new { @class= "btn btn-info btnReadRecipe" })
            </td>
        </tr>
    }
</table>*@

@(Html
    .Grid(Model)
    .Build(columns =>
    {
        //columns.Add(o => o.OrderItemID).Titled("OrderItemID");
        //columns.Add(o => o.OrderID).Titled("OrderID");
        columns.Add(o => o.Order.PosID).Titled("PosID");
        columns.Add(o => o.FDID).Titled("FDID");
        columns.Add(o => o.Quantity).Titled("Quantity");
        columns.Add(o => o.Desc).Titled("Desc").Filterable(false);
        columns.Add(o => o.Status).Titled("Status");
        columns.Add(o => o.OrderID).Encoded(false).RenderedAs(o => (
            @Html.ActionLink("Xong", "UpdateReady", "Batender", new { OrderItemID = o.OrderItemID, OrderID = o.OrderID, view = "GetListOrderItemNeedPreparetion", NumOfOrderItem = 0 }, new { @class = "btn btn-success" }).ToHtmlString()
            + @Html.ActionLink("Hủy", "UpdateCancel", "Batender", new { OrderItemID = o.OrderItemID, OrderID = o.OrderID, view = "GetListOrderItemNeedPreparetion", NumOfOrderItem = 0 }, new { @class = "btn btn-danger btnCancel" }).ToHtmlString()
            + @Html.ActionLink("Xem công thức pha chế", "ReadRecipe", "Batender", new { FDID = o.FoodAndDrink.FDID }, new { @class = "btn btn-info btnReadRecipe" }).ToHtmlString()
        )).Filterable(false);
    })
    .WithFilterMode(GridFilterMode.FilterRow)
    .Empty("Data is empty")
    .Filterable()
    .Sortable()
)
