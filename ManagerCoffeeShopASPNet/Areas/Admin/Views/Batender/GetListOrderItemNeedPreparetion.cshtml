@model IEnumerable<ManagerCoffeeShopASPNet.OrderItem>
@using NonFactors.Mvc.Grid
@using ManagerCoffeeShopASPNet.Class
@{
    ViewBag.Title = "GetListOrderItemNeedPreparetion";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script>
    setTimeout(function () {
        location.reload();
    }, 30000);
</script>
<h2 style="text-align:center;padding:10px">DANH SÁCH CÁC LOẠI ĐỒ UỐNG CẦN PHA CHẾ</h2>

@(Html
    .Grid(Model)
    .Build(columns =>
    {
        ConvertStatusOrder m = new ConvertStatusOrder();
        columns.Add(o => o.Order.PosID).Titled("Vị trí");
        columns.Add(o => o.FoodAndDrink.Name).Titled("Tên đồ uống");
        columns.Add(o => o.Quantity).Titled("Số lượng");
        columns.Add(o => o.Desc).Titled("Ghi chú").Filterable(false);
        columns.Add(o =>m.ConvertStatus(o.Status).ToString()).Titled("Trạng thái");
        columns.Add(o => o.OrderID).Encoded(false).RenderedAs(o => (
            @Html.ActionLink("Xong", "UpdateReady", "Batender", new { OrderItemID = o.OrderItemID, OrderID = o.OrderID, view = "GetListOrderItemNeedPreparetion", NumOfOrderItem = 0 }, new { @class = "btn btn-sm btn-success" }).ToHtmlString()
            + " " + @Html.ActionLink("Hủy", "UpdateCancel", "Batender", new { OrderItemID = o.OrderItemID, OrderID = o.OrderID, view = "GetListOrderItemNeedPreparetion", NumOfOrderItem = 0 }, new { @class = "btn btn-sm btn-danger btnCancel" }).ToHtmlString()
            + " " + @Html.ActionLink("Xem công thức pha chế", "ReadRecipe", "Batender", new { FDID = o.FoodAndDrink.FDID }, new { @class = "btn btn-sm btn-info btnReadRecipe" }).ToHtmlString()
        )).Filterable(false);
    })
    .Empty("Không có dữ liệu.")
    .Filterable()
    .Sortable()
    .Pageable(pager =>
    {
        pager.RowsPerPage = 6;
    })
)