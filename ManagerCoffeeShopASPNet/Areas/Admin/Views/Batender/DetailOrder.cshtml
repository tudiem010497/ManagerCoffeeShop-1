@model IEnumerable<ManagerCoffeeShopASPNet.OrderItem>
@using NonFactors.Mvc.Grid;

@{
    ViewBag.Title = "DetailOrder";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<br />
<h2 style="text-align:center">CHI TIẾT HÓA ĐƠN</h2>
<hr />
@*<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.OrderID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FDID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Desc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.OrderID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FDID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Desc)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.ActionLink("Xong", "UpdateReady", "Batender", new { OrderItemID = item.OrderItemID, OrderID =item.OrderID, NumOfOrderItem = Model.Count(),view = "DetailOrder" }, new { @class = "btn btn-success" })
            @Html.ActionLink("Xem công thức pha chế", "ReadRecipe", "Batender", new { FDID = item.FDID }, new { @class= "btn btn-info btnReadRecipe" })
            @Html.ActionLink("Hủy", "UpdateCancel", "Batender", new { OrderItemID = item.OrderItemID, OrderID = item.OrderID, NumOfOrderItem = Model.Count(), view = "DetailOrder"}, new { @class = "btn btn-danger btnCancel" })
        </td>
    </tr>
}
</table>*@
<div>
    @(Html
        .Grid(Model).Build(columns =>
        {
            columns.Add(o => o.OrderID).Titled("Mã hóa đơn").Sortable(false);
            columns.Add(o => o.Order.Customer.Name).Titled("Tên khách hàng").Sortable(false);
            columns.Add(o => o.Order.PosID).Titled("Vị trí").Sortable(false);
            columns.Add(o => o.Order.OrderDateTime).Titled("Thời gian vào");
            columns.Add(o => o.FoodAndDrink.Name).Titled("Tên đồ uống").Sortable(false);
            columns.Add(o => o.Quantity).Titled("Số lượng").Sortable(false);
            columns.Add(o => o.Desc).Titled("Ghi chú").Sortable(false);
            columns.Add(o => o.Status).Titled("Trạng thái").Sortable(false);
            columns.Add(o => o.OrderItemID).Encoded(false).RenderedAs(o => (
                Html.ActionLink("Xong", "UpdateReady", "Batender", new { OrderItemID = o.OrderItemID, OrderID = o.OrderID, NumOfOrderItem = Model.Count(), view = "DetailOrder" }, new { @class = "btn btn-sm btn-outline-success" }).ToHtmlString()
                + Html.ActionLink("Xem công thức pha chế", "ReadRecipe", "Batender", new { FDID = o.FDID }, new { @class = "btn btn-sm btn-outline-info btnReadRecipe" }).ToHtmlString()
                + Html.ActionLink("Hủy", "UpdateCancel", "Batender", new { OrderItemID = o.OrderItemID, OrderID = o.OrderID, NumOfOrderItem = Model.Count(), view = "DetailOrder" }, new { @class = "btn btn-sm btn-outline-danger btnCancel" })
            )).Filterable(false);
        })
        .Empty("Data is empty")
        .Filterable()
        .Sortable()
    )
</div>
