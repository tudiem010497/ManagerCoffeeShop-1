#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagerCoffeeShopASPNet
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CoffeeShopDB")]
	public partial class CoffeeShopDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertBlog(Blog instance);
    partial void UpdateBlog(Blog instance);
    partial void DeleteBlog(Blog instance);
    partial void InsertBannerImage(BannerImage instance);
    partial void UpdateBannerImage(BannerImage instance);
    partial void DeleteBannerImage(BannerImage instance);
    partial void InsertCoffeeLandScape(CoffeeLandScape instance);
    partial void UpdateCoffeeLandScape(CoffeeLandScape instance);
    partial void DeleteCoffeeLandScape(CoffeeLandScape instance);
    partial void InsertCoffeeLandScapeDetail(CoffeeLandScapeDetail instance);
    partial void UpdateCoffeeLandScapeDetail(CoffeeLandScapeDetail instance);
    partial void DeleteCoffeeLandScapeDetail(CoffeeLandScapeDetail instance);
    partial void InsertCoffeeShop(CoffeeShop instance);
    partial void UpdateCoffeeShop(CoffeeShop instance);
    partial void DeleteCoffeeShop(CoffeeShop instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertExtraExpense(ExtraExpense instance);
    partial void UpdateExtraExpense(ExtraExpense instance);
    partial void DeleteExtraExpense(ExtraExpense instance);
    partial void InsertFacility(Facility instance);
    partial void UpdateFacility(Facility instance);
    partial void DeleteFacility(Facility instance);
    partial void InsertFoodAndDrink(FoodAndDrink instance);
    partial void UpdateFoodAndDrink(FoodAndDrink instance);
    partial void DeleteFoodAndDrink(FoodAndDrink instance);
    partial void InsertGift(Gift instance);
    partial void UpdateGift(Gift instance);
    partial void DeleteGift(Gift instance);
    partial void InsertInfoIndex(InfoIndex instance);
    partial void UpdateInfoIndex(InfoIndex instance);
    partial void DeleteInfoIndex(InfoIndex instance);
    partial void InsertIngredientMessage(IngredientMessage instance);
    partial void UpdateIngredientMessage(IngredientMessage instance);
    partial void DeleteIngredientMessage(IngredientMessage instance);
    partial void InsertIngredient(Ingredient instance);
    partial void UpdateIngredient(Ingredient instance);
    partial void DeleteIngredient(Ingredient instance);
    partial void InsertIngredientsMapSupplier(IngredientsMapSupplier instance);
    partial void UpdateIngredientsMapSupplier(IngredientsMapSupplier instance);
    partial void DeleteIngredientsMapSupplier(IngredientsMapSupplier instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertMenuDetail(MenuDetail instance);
    partial void UpdateMenuDetail(MenuDetail instance);
    partial void DeleteMenuDetail(MenuDetail instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    partial void InsertPosition(Position instance);
    partial void UpdatePosition(Position instance);
    partial void DeletePosition(Position instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertReceipt(Receipt instance);
    partial void UpdateReceipt(Receipt instance);
    partial void DeleteReceipt(Receipt instance);
    partial void InsertReceiptDetail(ReceiptDetail instance);
    partial void UpdateReceiptDetail(ReceiptDetail instance);
    partial void DeleteReceiptDetail(ReceiptDetail instance);
    partial void InsertRecipe(Recipe instance);
    partial void UpdateRecipe(Recipe instance);
    partial void DeleteRecipe(Recipe instance);
    partial void InsertRecipeDetail(RecipeDetail instance);
    partial void UpdateRecipeDetail(RecipeDetail instance);
    partial void DeleteRecipeDetail(RecipeDetail instance);
    partial void InsertReservation(Reservation instance);
    partial void UpdateReservation(Reservation instance);
    partial void DeleteReservation(Reservation instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleMap(RoleMap instance);
    partial void UpdateRoleMap(RoleMap instance);
    partial void DeleteRoleMap(RoleMap instance);
    partial void InsertSalary(Salary instance);
    partial void UpdateSalary(Salary instance);
    partial void DeleteSalary(Salary instance);
    partial void InsertShape(Shape instance);
    partial void UpdateShape(Shape instance);
    partial void DeleteShape(Shape instance);
    partial void InsertShip(Ship instance);
    partial void UpdateShip(Ship instance);
    partial void DeleteShip(Ship instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertTimeSheet(TimeSheet instance);
    partial void UpdateTimeSheet(TimeSheet instance);
    partial void DeleteTimeSheet(TimeSheet instance);
    #endregion
		
		public CoffeeShopDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CoffeeShopDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CoffeeShopDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoffeeShopDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoffeeShopDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoffeeShopDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Blog> Blogs
		{
			get
			{
				return this.GetTable<Blog>();
			}
		}
		
		public System.Data.Linq.Table<BannerImage> BannerImages
		{
			get
			{
				return this.GetTable<BannerImage>();
			}
		}
		
		public System.Data.Linq.Table<BasicSalary> BasicSalaries
		{
			get
			{
				return this.GetTable<BasicSalary>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheetDetail> TimeSheetDetails
		{
			get
			{
				return this.GetTable<TimeSheetDetail>();
			}
		}
		
		public System.Data.Linq.Table<CoffeeBrewing> CoffeeBrewings
		{
			get
			{
				return this.GetTable<CoffeeBrewing>();
			}
		}
		
		public System.Data.Linq.Table<CoffeeLandScape> CoffeeLandScapes
		{
			get
			{
				return this.GetTable<CoffeeLandScape>();
			}
		}
		
		public System.Data.Linq.Table<CoffeeLandScapeDetail> CoffeeLandScapeDetails
		{
			get
			{
				return this.GetTable<CoffeeLandScapeDetail>();
			}
		}
		
		public System.Data.Linq.Table<CoffeeShop> CoffeeShops
		{
			get
			{
				return this.GetTable<CoffeeShop>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<ESTIngredient> ESTIngredients
		{
			get
			{
				return this.GetTable<ESTIngredient>();
			}
		}
		
		public System.Data.Linq.Table<ExtraDetail> ExtraDetails
		{
			get
			{
				return this.GetTable<ExtraDetail>();
			}
		}
		
		public System.Data.Linq.Table<ExtraExpense> ExtraExpenses
		{
			get
			{
				return this.GetTable<ExtraExpense>();
			}
		}
		
		public System.Data.Linq.Table<Facility> Facilities
		{
			get
			{
				return this.GetTable<Facility>();
			}
		}
		
		public System.Data.Linq.Table<FoodAndDrink> FoodAndDrinks
		{
			get
			{
				return this.GetTable<FoodAndDrink>();
			}
		}
		
		public System.Data.Linq.Table<Gift> Gifts
		{
			get
			{
				return this.GetTable<Gift>();
			}
		}
		
		public System.Data.Linq.Table<HistoryOrder> HistoryOrders
		{
			get
			{
				return this.GetTable<HistoryOrder>();
			}
		}
		
		public System.Data.Linq.Table<HistoryOrderPromotion> HistoryOrderPromotions
		{
			get
			{
				return this.GetTable<HistoryOrderPromotion>();
			}
		}
		
		public System.Data.Linq.Table<HistoryReceipt> HistoryReceipts
		{
			get
			{
				return this.GetTable<HistoryReceipt>();
			}
		}
		
		public System.Data.Linq.Table<HistoryTimeSheet> HistoryTimeSheets
		{
			get
			{
				return this.GetTable<HistoryTimeSheet>();
			}
		}
		
		public System.Data.Linq.Table<InfoIndex> InfoIndexes
		{
			get
			{
				return this.GetTable<InfoIndex>();
			}
		}
		
		public System.Data.Linq.Table<IngredientMessage> IngredientMessages
		{
			get
			{
				return this.GetTable<IngredientMessage>();
			}
		}
		
		public System.Data.Linq.Table<Ingredient> Ingredients
		{
			get
			{
				return this.GetTable<Ingredient>();
			}
		}
		
		public System.Data.Linq.Table<IngredientsMapSupplier> IngredientsMapSuppliers
		{
			get
			{
				return this.GetTable<IngredientsMapSupplier>();
			}
		}
		
		public System.Data.Linq.Table<IngreExchange> IngreExchanges
		{
			get
			{
				return this.GetTable<IngreExchange>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<MenuDetail> MenuDetails
		{
			get
			{
				return this.GetTable<MenuDetail>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItems
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<OrderPromotion> OrderPromotions
		{
			get
			{
				return this.GetTable<OrderPromotion>();
			}
		}
		
		public System.Data.Linq.Table<Position> Positions
		{
			get
			{
				return this.GetTable<Position>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotions
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<ProOnDrinkQuantity> ProOnDrinkQuantities
		{
			get
			{
				return this.GetTable<ProOnDrinkQuantity>();
			}
		}
		
		public System.Data.Linq.Table<ProOnOrderAmount> ProOnOrderAmounts
		{
			get
			{
				return this.GetTable<ProOnOrderAmount>();
			}
		}
		
		public System.Data.Linq.Table<Receipt> Receipts
		{
			get
			{
				return this.GetTable<Receipt>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptDetail> ReceiptDetails
		{
			get
			{
				return this.GetTable<ReceiptDetail>();
			}
		}
		
		public System.Data.Linq.Table<Recipe> Recipes
		{
			get
			{
				return this.GetTable<Recipe>();
			}
		}
		
		public System.Data.Linq.Table<RecipeDetail> RecipeDetails
		{
			get
			{
				return this.GetTable<RecipeDetail>();
			}
		}
		
		public System.Data.Linq.Table<Reservation> Reservations
		{
			get
			{
				return this.GetTable<Reservation>();
			}
		}
		
		public System.Data.Linq.Table<ReservationDetail> ReservationDetails
		{
			get
			{
				return this.GetTable<ReservationDetail>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleMap> RoleMaps
		{
			get
			{
				return this.GetTable<RoleMap>();
			}
		}
		
		public System.Data.Linq.Table<Salary> Salaries
		{
			get
			{
				return this.GetTable<Salary>();
			}
		}
		
		public System.Data.Linq.Table<Server> Servers
		{
			get
			{
				return this.GetTable<Server>();
			}
		}
		
		public System.Data.Linq.Table<Shape> Shapes
		{
			get
			{
				return this.GetTable<Shape>();
			}
		}
		
		public System.Data.Linq.Table<Ship> Ships
		{
			get
			{
				return this.GetTable<Ship>();
			}
		}
		
		public System.Data.Linq.Table<ShipDetail> ShipDetails
		{
			get
			{
				return this.GetTable<ShipDetail>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheet> TimeSheets
		{
			get
			{
				return this.GetTable<TimeSheet>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Account_Email_Check")]
		public int sp_Account_Email_Check([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> res)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, res);
			res = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Account_Login_Check")]
		public int sp_Account_Login_Check([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> res)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, res);
			res = ((System.Nullable<bool>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Check_UserName_IsExist")]
		public int sp_Check_UserName_IsExist([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(30)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, result);
			result = ((System.Nullable<bool>)(result1.GetParameterValue(1)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_INSERT_ACCOUNT_CUSTOMER")]
		public int sp_INSERT_ACCOUNT_CUSTOMER([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(30)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccType", DbType="VarChar(10)")] string accType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, email, password, accType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_INSERT_CART")]
		public void sp_INSERT_CART([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FDID", DbType="Int")] System.Nullable<int> fDID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Int")] System.Nullable<int> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Int")] System.Nullable<int> price)
		{
			this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fDID, name, quantity, price);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private string _AccType;
		
		private string _Position;
		
		private string _Avatar;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<RoleMap> _RoleMaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAccTypeChanging(string value);
    partial void OnAccTypeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    #endregion
		
		public Account()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._RoleMaps = new EntitySet<RoleMap>(new Action<RoleMap>(this.attach_RoleMaps), new Action<RoleMap>(this.detach_RoleMaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string AccType
		{
			get
			{
				return this._AccType;
			}
			set
			{
				if ((this._AccType != value))
				{
					this.OnAccTypeChanging(value);
					this.SendPropertyChanging();
					this._AccType = value;
					this.SendPropertyChanged("AccType");
					this.OnAccTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(30)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="VarChar(MAX)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Customer", Storage="_Customers", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Employee", Storage="_Employees", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_RoleMap", Storage="_RoleMaps", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<RoleMap> RoleMaps
		{
			get
			{
				return this._RoleMaps;
			}
			set
			{
				this._RoleMaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_RoleMaps(RoleMap entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_RoleMaps(RoleMap entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blog")]
	public partial class Blog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlogID;
		
		private string _BlogName;
		
		private string _BlogTitle;
		
		private string _BlogDesc;
		
		private System.Nullable<System.DateTime> _BlogDateTime;
		
		private string _BlogHref;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlogIDChanging(int value);
    partial void OnBlogIDChanged();
    partial void OnBlogNameChanging(string value);
    partial void OnBlogNameChanged();
    partial void OnBlogTitleChanging(string value);
    partial void OnBlogTitleChanged();
    partial void OnBlogDescChanging(string value);
    partial void OnBlogDescChanged();
    partial void OnBlogDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBlogDateTimeChanged();
    partial void OnBlogHrefChanging(string value);
    partial void OnBlogHrefChanged();
    #endregion
		
		public Blog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlogID
		{
			get
			{
				return this._BlogID;
			}
			set
			{
				if ((this._BlogID != value))
				{
					this.OnBlogIDChanging(value);
					this.SendPropertyChanging();
					this._BlogID = value;
					this.SendPropertyChanged("BlogID");
					this.OnBlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BlogName
		{
			get
			{
				return this._BlogName;
			}
			set
			{
				if ((this._BlogName != value))
				{
					this.OnBlogNameChanging(value);
					this.SendPropertyChanging();
					this._BlogName = value;
					this.SendPropertyChanged("BlogName");
					this.OnBlogNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BlogTitle
		{
			get
			{
				return this._BlogTitle;
			}
			set
			{
				if ((this._BlogTitle != value))
				{
					this.OnBlogTitleChanging(value);
					this.SendPropertyChanging();
					this._BlogTitle = value;
					this.SendPropertyChanged("BlogTitle");
					this.OnBlogTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogDesc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BlogDesc
		{
			get
			{
				return this._BlogDesc;
			}
			set
			{
				if ((this._BlogDesc != value))
				{
					this.OnBlogDescChanging(value);
					this.SendPropertyChanging();
					this._BlogDesc = value;
					this.SendPropertyChanged("BlogDesc");
					this.OnBlogDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BlogDateTime
		{
			get
			{
				return this._BlogDateTime;
			}
			set
			{
				if ((this._BlogDateTime != value))
				{
					this.OnBlogDateTimeChanging(value);
					this.SendPropertyChanging();
					this._BlogDateTime = value;
					this.SendPropertyChanged("BlogDateTime");
					this.OnBlogDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlogHref", DbType="VarChar(100)")]
		public string BlogHref
		{
			get
			{
				return this._BlogHref;
			}
			set
			{
				if ((this._BlogHref != value))
				{
					this.OnBlogHrefChanging(value);
					this.SendPropertyChanging();
					this._BlogHref = value;
					this.SendPropertyChanged("BlogHref");
					this.OnBlogHrefChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BannerImage")]
	public partial class BannerImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BannerImageID;
		
		private string _BannerImagePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBannerImageIDChanging(int value);
    partial void OnBannerImageIDChanged();
    partial void OnBannerImagePathChanging(string value);
    partial void OnBannerImagePathChanged();
    #endregion
		
		public BannerImage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BannerImageID
		{
			get
			{
				return this._BannerImageID;
			}
			set
			{
				if ((this._BannerImageID != value))
				{
					this.OnBannerImageIDChanging(value);
					this.SendPropertyChanging();
					this._BannerImageID = value;
					this.SendPropertyChanged("BannerImageID");
					this.OnBannerImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerImagePath", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BannerImagePath
		{
			get
			{
				return this._BannerImagePath;
			}
			set
			{
				if ((this._BannerImagePath != value))
				{
					this.OnBannerImagePathChanging(value);
					this.SendPropertyChanging();
					this._BannerImagePath = value;
					this.SendPropertyChanged("BannerImagePath");
					this.OnBannerImagePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BasicSalary")]
	public partial class BasicSalary
	{
		
		private int _EmployeeID;
		
		private int _SalaryID;
		
		public BasicSalary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryID", DbType="Int NOT NULL")]
		public int SalaryID
		{
			get
			{
				return this._SalaryID;
			}
			set
			{
				if ((this._SalaryID != value))
				{
					this._SalaryID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeSheetDetail")]
	public partial class TimeSheetDetail
	{
		
		private int _TimeSheetID;
		
		private string _Day;
		
		private System.DateTime _Date;
		
		private System.TimeSpan _RegisterTimeIn;
		
		private System.TimeSpan _RegisterTimeOut;
		
		private System.TimeSpan _TimeIn;
		
		private System.TimeSpan _TimeOut;
		
		private System.Nullable<double> _Bonus;
		
		private string _Currency;
		
		private string _Desc;
		
		public TimeSheetDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSheetID", DbType="Int NOT NULL")]
		public int TimeSheetID
		{
			get
			{
				return this._TimeSheetID;
			}
			set
			{
				if ((this._TimeSheetID != value))
				{
					this._TimeSheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this._Day = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTimeIn", DbType="Time NOT NULL")]
		public System.TimeSpan RegisterTimeIn
		{
			get
			{
				return this._RegisterTimeIn;
			}
			set
			{
				if ((this._RegisterTimeIn != value))
				{
					this._RegisterTimeIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTimeOut", DbType="Time NOT NULL")]
		public System.TimeSpan RegisterTimeOut
		{
			get
			{
				return this._RegisterTimeOut;
			}
			set
			{
				if ((this._RegisterTimeOut != value))
				{
					this._RegisterTimeOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn", DbType="Time NOT NULL")]
		public System.TimeSpan TimeIn
		{
			get
			{
				return this._TimeIn;
			}
			set
			{
				if ((this._TimeIn != value))
				{
					this._TimeIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut", DbType="Time NOT NULL")]
		public System.TimeSpan TimeOut
		{
			get
			{
				return this._TimeOut;
			}
			set
			{
				if ((this._TimeOut != value))
				{
					this._TimeOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Float")]
		public System.Nullable<double> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this._Bonus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoffeeBrewings")]
	public partial class CoffeeBrewing
	{
		
		private int _FDID;
		
		private int _EmployeeID;
		
		private int _Quantity;
		
		public CoffeeBrewing()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", DbType="Int NOT NULL")]
		public int FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					this._FDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoffeeLandScape")]
	public partial class CoffeeLandScape : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CLSID;
		
		private int _CSID;
		
		private string _FloorID;
		
		private string _MapRatio;
		
		private EntitySet<CoffeeLandScapeDetail> _CoffeeLandScapeDetails;
		
		private EntityRef<CoffeeShop> _CoffeeShop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLSIDChanging(int value);
    partial void OnCLSIDChanged();
    partial void OnCSIDChanging(int value);
    partial void OnCSIDChanged();
    partial void OnFloorIDChanging(string value);
    partial void OnFloorIDChanged();
    partial void OnMapRatioChanging(string value);
    partial void OnMapRatioChanged();
    #endregion
		
		public CoffeeLandScape()
		{
			this._CoffeeLandScapeDetails = new EntitySet<CoffeeLandScapeDetail>(new Action<CoffeeLandScapeDetail>(this.attach_CoffeeLandScapeDetails), new Action<CoffeeLandScapeDetail>(this.detach_CoffeeLandScapeDetails));
			this._CoffeeShop = default(EntityRef<CoffeeShop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CLSID
		{
			get
			{
				return this._CLSID;
			}
			set
			{
				if ((this._CLSID != value))
				{
					this.OnCLSIDChanging(value);
					this.SendPropertyChanging();
					this._CLSID = value;
					this.SendPropertyChanged("CLSID");
					this.OnCLSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSID", DbType="Int NOT NULL")]
		public int CSID
		{
			get
			{
				return this._CSID;
			}
			set
			{
				if ((this._CSID != value))
				{
					if (this._CoffeeShop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCSIDChanging(value);
					this.SendPropertyChanging();
					this._CSID = value;
					this.SendPropertyChanged("CSID");
					this.OnCSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string FloorID
		{
			get
			{
				return this._FloorID;
			}
			set
			{
				if ((this._FloorID != value))
				{
					this.OnFloorIDChanging(value);
					this.SendPropertyChanging();
					this._FloorID = value;
					this.SendPropertyChanged("FloorID");
					this.OnFloorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapRatio", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MapRatio
		{
			get
			{
				return this._MapRatio;
			}
			set
			{
				if ((this._MapRatio != value))
				{
					this.OnMapRatioChanging(value);
					this.SendPropertyChanging();
					this._MapRatio = value;
					this.SendPropertyChanged("MapRatio");
					this.OnMapRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoffeeLandScape_CoffeeLandScapeDetail", Storage="_CoffeeLandScapeDetails", ThisKey="CLSID", OtherKey="CLSID")]
		public EntitySet<CoffeeLandScapeDetail> CoffeeLandScapeDetails
		{
			get
			{
				return this._CoffeeLandScapeDetails;
			}
			set
			{
				this._CoffeeLandScapeDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoffeeShop_CoffeeLandScape", Storage="_CoffeeShop", ThisKey="CSID", OtherKey="CSID", IsForeignKey=true)]
		public CoffeeShop CoffeeShop
		{
			get
			{
				return this._CoffeeShop.Entity;
			}
			set
			{
				CoffeeShop previousValue = this._CoffeeShop.Entity;
				if (((previousValue != value) 
							|| (this._CoffeeShop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoffeeShop.Entity = null;
						previousValue.CoffeeLandScapes.Remove(this);
					}
					this._CoffeeShop.Entity = value;
					if ((value != null))
					{
						value.CoffeeLandScapes.Add(this);
						this._CSID = value.CSID;
					}
					else
					{
						this._CSID = default(int);
					}
					this.SendPropertyChanged("CoffeeShop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoffeeLandScapeDetails(CoffeeLandScapeDetail entity)
		{
			this.SendPropertyChanging();
			entity.CoffeeLandScape = this;
		}
		
		private void detach_CoffeeLandScapeDetails(CoffeeLandScapeDetail entity)
		{
			this.SendPropertyChanging();
			entity.CoffeeLandScape = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoffeeLandScapeDetail")]
	public partial class CoffeeLandScapeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _CLSID;
		
		private int _ShapeID;
		
		private int _RowID;
		
		private int _ColID;
		
		private double _Width;
		
		private double _Length;
		
		private string _ItemType;
		
		private EntityRef<CoffeeLandScape> _CoffeeLandScape;
		
		private EntityRef<Shape> _Shape;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnCLSIDChanging(int value);
    partial void OnCLSIDChanged();
    partial void OnShapeIDChanging(int value);
    partial void OnShapeIDChanged();
    partial void OnRowIDChanging(int value);
    partial void OnRowIDChanged();
    partial void OnColIDChanging(int value);
    partial void OnColIDChanged();
    partial void OnWidthChanging(double value);
    partial void OnWidthChanged();
    partial void OnLengthChanging(double value);
    partial void OnLengthChanged();
    partial void OnItemTypeChanging(string value);
    partial void OnItemTypeChanged();
    #endregion
		
		public CoffeeLandScapeDetail()
		{
			this._CoffeeLandScape = default(EntityRef<CoffeeLandScape>);
			this._Shape = default(EntityRef<Shape>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLSID", DbType="Int NOT NULL")]
		public int CLSID
		{
			get
			{
				return this._CLSID;
			}
			set
			{
				if ((this._CLSID != value))
				{
					if (this._CoffeeLandScape.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCLSIDChanging(value);
					this.SendPropertyChanging();
					this._CLSID = value;
					this.SendPropertyChanged("CLSID");
					this.OnCLSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShapeID", DbType="Int NOT NULL")]
		public int ShapeID
		{
			get
			{
				return this._ShapeID;
			}
			set
			{
				if ((this._ShapeID != value))
				{
					if (this._Shape.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShapeIDChanging(value);
					this.SendPropertyChanging();
					this._ShapeID = value;
					this.SendPropertyChanged("ShapeID");
					this.OnShapeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowID", DbType="Int NOT NULL")]
		public int RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if ((this._RowID != value))
				{
					this.OnRowIDChanging(value);
					this.SendPropertyChanging();
					this._RowID = value;
					this.SendPropertyChanged("RowID");
					this.OnRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColID", DbType="Int NOT NULL")]
		public int ColID
		{
			get
			{
				return this._ColID;
			}
			set
			{
				if ((this._ColID != value))
				{
					this.OnColIDChanging(value);
					this.SendPropertyChanging();
					this._ColID = value;
					this.SendPropertyChanged("ColID");
					this.OnColIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Float NOT NULL")]
		public double Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Float NOT NULL")]
		public double Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ItemType
		{
			get
			{
				return this._ItemType;
			}
			set
			{
				if ((this._ItemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._ItemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoffeeLandScape_CoffeeLandScapeDetail", Storage="_CoffeeLandScape", ThisKey="CLSID", OtherKey="CLSID", IsForeignKey=true)]
		public CoffeeLandScape CoffeeLandScape
		{
			get
			{
				return this._CoffeeLandScape.Entity;
			}
			set
			{
				CoffeeLandScape previousValue = this._CoffeeLandScape.Entity;
				if (((previousValue != value) 
							|| (this._CoffeeLandScape.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoffeeLandScape.Entity = null;
						previousValue.CoffeeLandScapeDetails.Remove(this);
					}
					this._CoffeeLandScape.Entity = value;
					if ((value != null))
					{
						value.CoffeeLandScapeDetails.Add(this);
						this._CLSID = value.CLSID;
					}
					else
					{
						this._CLSID = default(int);
					}
					this.SendPropertyChanged("CoffeeLandScape");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shape_CoffeeLandScapeDetail", Storage="_Shape", ThisKey="ShapeID", OtherKey="ShapeID", IsForeignKey=true)]
		public Shape Shape
		{
			get
			{
				return this._Shape.Entity;
			}
			set
			{
				Shape previousValue = this._Shape.Entity;
				if (((previousValue != value) 
							|| (this._Shape.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shape.Entity = null;
						previousValue.CoffeeLandScapeDetails.Remove(this);
					}
					this._Shape.Entity = value;
					if ((value != null))
					{
						value.CoffeeLandScapeDetails.Add(this);
						this._ShapeID = value.ShapeID;
					}
					else
					{
						this._ShapeID = default(int);
					}
					this.SendPropertyChanged("Shape");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoffeeShop")]
	public partial class CoffeeShop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CSID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _LogoImagePath;
		
		private string _TitleAbout;
		
		private string _DescAbout;
		
		private string _TitleContact;
		
		private string _DescContact;
		
		private string _Email;
		
		private EntitySet<CoffeeLandScape> _CoffeeLandScapes;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCSIDChanging(int value);
    partial void OnCSIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnLogoImagePathChanging(string value);
    partial void OnLogoImagePathChanged();
    partial void OnTitleAboutChanging(string value);
    partial void OnTitleAboutChanged();
    partial void OnDescAboutChanging(string value);
    partial void OnDescAboutChanged();
    partial void OnTitleContactChanging(string value);
    partial void OnTitleContactChanged();
    partial void OnDescContactChanging(string value);
    partial void OnDescContactChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public CoffeeShop()
		{
			this._CoffeeLandScapes = new EntitySet<CoffeeLandScape>(new Action<CoffeeLandScape>(this.attach_CoffeeLandScapes), new Action<CoffeeLandScape>(this.detach_CoffeeLandScapes));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CSID
		{
			get
			{
				return this._CSID;
			}
			set
			{
				if ((this._CSID != value))
				{
					this.OnCSIDChanging(value);
					this.SendPropertyChanging();
					this._CSID = value;
					this.SendPropertyChanged("CSID");
					this.OnCSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImagePath", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LogoImagePath
		{
			get
			{
				return this._LogoImagePath;
			}
			set
			{
				if ((this._LogoImagePath != value))
				{
					this.OnLogoImagePathChanging(value);
					this.SendPropertyChanging();
					this._LogoImagePath = value;
					this.SendPropertyChanged("LogoImagePath");
					this.OnLogoImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleAbout", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TitleAbout
		{
			get
			{
				return this._TitleAbout;
			}
			set
			{
				if ((this._TitleAbout != value))
				{
					this.OnTitleAboutChanging(value);
					this.SendPropertyChanging();
					this._TitleAbout = value;
					this.SendPropertyChanged("TitleAbout");
					this.OnTitleAboutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescAbout", DbType="NVarChar(MAX)")]
		public string DescAbout
		{
			get
			{
				return this._DescAbout;
			}
			set
			{
				if ((this._DescAbout != value))
				{
					this.OnDescAboutChanging(value);
					this.SendPropertyChanging();
					this._DescAbout = value;
					this.SendPropertyChanged("DescAbout");
					this.OnDescAboutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleContact", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TitleContact
		{
			get
			{
				return this._TitleContact;
			}
			set
			{
				if ((this._TitleContact != value))
				{
					this.OnTitleContactChanging(value);
					this.SendPropertyChanging();
					this._TitleContact = value;
					this.SendPropertyChanged("TitleContact");
					this.OnTitleContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescContact", DbType="NVarChar(MAX)")]
		public string DescContact
		{
			get
			{
				return this._DescContact;
			}
			set
			{
				if ((this._DescContact != value))
				{
					this.OnDescContactChanging(value);
					this.SendPropertyChanging();
					this._DescContact = value;
					this.SendPropertyChanged("DescContact");
					this.OnDescContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoffeeShop_CoffeeLandScape", Storage="_CoffeeLandScapes", ThisKey="CSID", OtherKey="CSID")]
		public EntitySet<CoffeeLandScape> CoffeeLandScapes
		{
			get
			{
				return this._CoffeeLandScapes;
			}
			set
			{
				this._CoffeeLandScapes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoffeeShop_Employee", Storage="_Employees", ThisKey="CSID", OtherKey="CSID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoffeeLandScapes(CoffeeLandScape entity)
		{
			this.SendPropertyChanging();
			entity.CoffeeShop = this;
		}
		
		private void detach_CoffeeLandScapes(CoffeeLandScape entity)
		{
			this.SendPropertyChanging();
			entity.CoffeeShop = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.CoffeeShop = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.CoffeeShop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private int _UserID;
		
		private string _Name;
		
		private System.DateTime _DOB;
		
		private string _Address;
		
		private string _IdentityNum;
		
		private string _Phone;
		
		private int _Point;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Reservation> _Reservations;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIdentityNumChanging(string value);
    partial void OnIdentityNumChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPointChanging(int value);
    partial void OnPointChanged();
    #endregion
		
		public Customer()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNum", DbType="VarChar(20)")]
		public string IdentityNum
		{
			get
			{
				return this._IdentityNum;
			}
			set
			{
				if ((this._IdentityNum != value))
				{
					this.OnIdentityNumChanging(value);
					this.SendPropertyChanging();
					this._IdentityNum = value;
					this.SendPropertyChanged("IdentityNum");
					this.OnIdentityNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int NOT NULL")]
		public int Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._Point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Orders", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Reservation", Storage="_Reservations", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Customer", Storage="_Account", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeID;
		
		private System.Nullable<int> _UserID;
		
		private int _CSID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Address;
		
		private string _Phone;
		
		private System.DateTime _DOB;
		
		private string _Gender;
		
		private string _IndentityNum;
		
		private string _Status;
		
		private EntitySet<IngredientMessage> _IngredientMessages;
		
		private EntitySet<Ship> _Ships;
		
		private EntitySet<TimeSheet> _TimeSheets;
		
		private EntityRef<CoffeeShop> _CoffeeShop;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCSIDChanging(int value);
    partial void OnCSIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnIndentityNumChanging(string value);
    partial void OnIndentityNumChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Employee()
		{
			this._IngredientMessages = new EntitySet<IngredientMessage>(new Action<IngredientMessage>(this.attach_IngredientMessages), new Action<IngredientMessage>(this.detach_IngredientMessages));
			this._Ships = new EntitySet<Ship>(new Action<Ship>(this.attach_Ships), new Action<Ship>(this.detach_Ships));
			this._TimeSheets = new EntitySet<TimeSheet>(new Action<TimeSheet>(this.attach_TimeSheets), new Action<TimeSheet>(this.detach_TimeSheets));
			this._CoffeeShop = default(EntityRef<CoffeeShop>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSID", DbType="Int NOT NULL")]
		public int CSID
		{
			get
			{
				return this._CSID;
			}
			set
			{
				if ((this._CSID != value))
				{
					if (this._CoffeeShop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCSIDChanging(value);
					this.SendPropertyChanging();
					this._CSID = value;
					this.SendPropertyChanged("CSID");
					this.OnCSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndentityNum", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IndentityNum
		{
			get
			{
				return this._IndentityNum;
			}
			set
			{
				if ((this._IndentityNum != value))
				{
					this.OnIndentityNumChanging(value);
					this.SendPropertyChanging();
					this._IndentityNum = value;
					this.SendPropertyChanged("IndentityNum");
					this.OnIndentityNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_IngredientMessage", Storage="_IngredientMessages", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<IngredientMessage> IngredientMessages
		{
			get
			{
				return this._IngredientMessages;
			}
			set
			{
				this._IngredientMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Ship", Storage="_Ships", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<Ship> Ships
		{
			get
			{
				return this._Ships;
			}
			set
			{
				this._Ships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TimeSheet", Storage="_TimeSheets", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<TimeSheet> TimeSheets
		{
			get
			{
				return this._TimeSheets;
			}
			set
			{
				this._TimeSheets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoffeeShop_Employee", Storage="_CoffeeShop", ThisKey="CSID", OtherKey="CSID", IsForeignKey=true)]
		public CoffeeShop CoffeeShop
		{
			get
			{
				return this._CoffeeShop.Entity;
			}
			set
			{
				CoffeeShop previousValue = this._CoffeeShop.Entity;
				if (((previousValue != value) 
							|| (this._CoffeeShop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoffeeShop.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._CoffeeShop.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._CSID = value.CSID;
					}
					else
					{
						this._CSID = default(int);
					}
					this.SendPropertyChanged("CoffeeShop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Employee", Storage="_Account", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IngredientMessages(IngredientMessage entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_IngredientMessages(IngredientMessage entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Ships(Ship entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Ships(Ship entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_TimeSheets(TimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_TimeSheets(TimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTIngredient")]
	public partial class ESTIngredient
	{
		
		private int _IngreID;
		
		private string _Name;
		
		private double _ReceiptAmount;
		
		private double _ESTAmount;
		
		private string _Unit;
		
		private System.DateTime _Date;
		
		public ESTIngredient()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IngreID
		{
			get
			{
				return this._IngreID;
			}
			set
			{
				if ((this._IngreID != value))
				{
					this._IngreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptAmount", DbType="Float NOT NULL")]
		public double ReceiptAmount
		{
			get
			{
				return this._ReceiptAmount;
			}
			set
			{
				if ((this._ReceiptAmount != value))
				{
					this._ReceiptAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTAmount", DbType="Float NOT NULL")]
		public double ESTAmount
		{
			get
			{
				return this._ESTAmount;
			}
			set
			{
				if ((this._ESTAmount != value))
				{
					this._ESTAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtraDetail")]
	public partial class ExtraDetail
	{
		
		private int _ExpenseID;
		
		private System.Nullable<System.TimeSpan> _Hour;
		
		private string _Day;
		
		private System.Nullable<System.DateTime> _SpecificDate;
		
		private System.Nullable<int> _IngreId;
		
		private System.Nullable<int> _FDID;
		
		private System.Nullable<int> _FacilitiesID;
		
		private System.Nullable<double> _Amount;
		
		private string _Unit;
		
		public ExtraDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseID", DbType="Int NOT NULL")]
		public int ExpenseID
		{
			get
			{
				return this._ExpenseID;
			}
			set
			{
				if ((this._ExpenseID != value))
				{
					this._ExpenseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="Time")]
		public System.Nullable<System.TimeSpan> Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this._Hour = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(10)")]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this._Day = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificDate", DbType="Date")]
		public System.Nullable<System.DateTime> SpecificDate
		{
			get
			{
				return this._SpecificDate;
			}
			set
			{
				if ((this._SpecificDate != value))
				{
					this._SpecificDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreId", DbType="Int")]
		public System.Nullable<int> IngreId
		{
			get
			{
				return this._IngreId;
			}
			set
			{
				if ((this._IngreId != value))
				{
					this._IngreId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", DbType="Int")]
		public System.Nullable<int> FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					this._FDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesID", DbType="Int")]
		public System.Nullable<int> FacilitiesID
		{
			get
			{
				return this._FacilitiesID;
			}
			set
			{
				if ((this._FacilitiesID != value))
				{
					this._FacilitiesID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(10)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtraExpense")]
	public partial class ExtraExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpenseID;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _Type;
		
		private int _Period;
		
		private string _Desc;
		
		private System.Nullable<double> _Price;
		
		private string _Currency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpenseIDChanging(int value);
    partial void OnExpenseIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPeriodChanging(int value);
    partial void OnPeriodChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    #endregion
		
		public ExtraExpense()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExpenseID
		{
			get
			{
				return this._ExpenseID;
			}
			set
			{
				if ((this._ExpenseID != value))
				{
					this.OnExpenseIDChanging(value);
					this.SendPropertyChanging();
					this._ExpenseID = value;
					this.SendPropertyChanged("ExpenseID");
					this.OnExpenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Int NOT NULL")]
		public int Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facilities")]
	public partial class Facility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FacilitiesID;
		
		private System.Nullable<int> _SupplierID;
		
		private string _Name;
		
		private int _Quantity;
		
		private string _Unit;
		
		private double _UnitPrice;
		
		private string _Currency;
		
		private EntitySet<ReceiptDetail> _ReceiptDetails;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilitiesIDChanging(int value);
    partial void OnFacilitiesIDChanged();
    partial void OnSupplierIDChanging(System.Nullable<int> value);
    partial void OnSupplierIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnUnitPriceChanging(double value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    #endregion
		
		public Facility()
		{
			this._ReceiptDetails = new EntitySet<ReceiptDetail>(new Action<ReceiptDetail>(this.attach_ReceiptDetails), new Action<ReceiptDetail>(this.detach_ReceiptDetails));
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FacilitiesID
		{
			get
			{
				return this._FacilitiesID;
			}
			set
			{
				if ((this._FacilitiesID != value))
				{
					this.OnFacilitiesIDChanging(value);
					this.SendPropertyChanging();
					this._FacilitiesID = value;
					this.SendPropertyChanged("FacilitiesID");
					this.OnFacilitiesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int")]
		public System.Nullable<int> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float NOT NULL")]
		public double UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facility_ReceiptDetail", Storage="_ReceiptDetails", ThisKey="FacilitiesID", OtherKey="FacilitiesID")]
		public EntitySet<ReceiptDetail> ReceiptDetails
		{
			get
			{
				return this._ReceiptDetails;
			}
			set
			{
				this._ReceiptDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Facility", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Facilities.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Facilities.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Facility = this;
		}
		
		private void detach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Facility = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodAndDrink")]
	public partial class FoodAndDrink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FDID;
		
		private string _Name;
		
		private string _Desc;
		
		private string _ImagePath;
		
		private string _Size;
		
		private string _Type;
		
		private double _UnitPrice;
		
		private string _Currency;
		
		private System.Nullable<double> _Rate;
		
		private EntitySet<OrderItem> _OrderItems;
		
		private EntitySet<Recipe> _Recipes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFDIDChanging(int value);
    partial void OnFDIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnUnitPriceChanging(double value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnRateChanging(System.Nullable<double> value);
    partial void OnRateChanged();
    #endregion
		
		public FoodAndDrink()
		{
			this._OrderItems = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItems), new Action<OrderItem>(this.detach_OrderItems));
			this._Recipes = new EntitySet<Recipe>(new Action<Recipe>(this.attach_Recipes), new Action<Recipe>(this.detach_Recipes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					this.OnFDIDChanging(value);
					this.SendPropertyChanging();
					this._FDID = value;
					this.SendPropertyChanged("FDID");
					this.OnFDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float NOT NULL")]
		public double UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Float")]
		public System.Nullable<double> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodAndDrink_OrderItem", Storage="_OrderItems", ThisKey="FDID", OtherKey="FDID")]
		public EntitySet<OrderItem> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodAndDrink_Recipe", Storage="_Recipes", ThisKey="FDID", OtherKey="FDID")]
		public EntitySet<Recipe> Recipes
		{
			get
			{
				return this._Recipes;
			}
			set
			{
				this._Recipes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.FoodAndDrink = this;
		}
		
		private void detach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.FoodAndDrink = null;
		}
		
		private void attach_Recipes(Recipe entity)
		{
			this.SendPropertyChanging();
			entity.FoodAndDrink = this;
		}
		
		private void detach_Recipes(Recipe entity)
		{
			this.SendPropertyChanging();
			entity.FoodAndDrink = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gift")]
	public partial class Gift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GiftID;
		
		private System.Nullable<int> _SupplierID;
		
		private string _Name;
		
		private double _UnitPrice;
		
		private string _Currency;
		
		private string _Desc;
		
		private EntitySet<ReceiptDetail> _ReceiptDetails;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGiftIDChanging(int value);
    partial void OnGiftIDChanged();
    partial void OnSupplierIDChanging(System.Nullable<int> value);
    partial void OnSupplierIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitPriceChanging(double value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    #endregion
		
		public Gift()
		{
			this._ReceiptDetails = new EntitySet<ReceiptDetail>(new Action<ReceiptDetail>(this.attach_ReceiptDetails), new Action<ReceiptDetail>(this.detach_ReceiptDetails));
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GiftID
		{
			get
			{
				return this._GiftID;
			}
			set
			{
				if ((this._GiftID != value))
				{
					this.OnGiftIDChanging(value);
					this.SendPropertyChanging();
					this._GiftID = value;
					this.SendPropertyChanged("GiftID");
					this.OnGiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int")]
		public System.Nullable<int> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float NOT NULL")]
		public double UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gift_ReceiptDetail", Storage="_ReceiptDetails", ThisKey="GiftID", OtherKey="GiftID")]
		public EntitySet<ReceiptDetail> ReceiptDetails
		{
			get
			{
				return this._ReceiptDetails;
			}
			set
			{
				this._ReceiptDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Gift", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Gifts.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Gifts.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Gift = this;
		}
		
		private void detach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Gift = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryOrder")]
	public partial class HistoryOrder
	{
		
		private System.Nullable<int> _OrderID;
		
		private System.Nullable<System.DateTime> _OrderDateTime;
		
		private System.Nullable<int> _FDID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _UnitPrice;
		
		public HistoryOrder()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDateTime
		{
			get
			{
				return this._OrderDateTime;
			}
			set
			{
				if ((this._OrderDateTime != value))
				{
					this._OrderDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", DbType="Int")]
		public System.Nullable<int> FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					this._FDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryOrderPromotion")]
	public partial class HistoryOrderPromotion
	{
		
		private System.Nullable<int> _OrderID;
		
		private System.Nullable<int> _PromotionID;
		
		public HistoryOrderPromotion()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int")]
		public System.Nullable<int> PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this._PromotionID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryReceipt")]
	public partial class HistoryReceipt
	{
		
		private System.Nullable<int> _IngreID;
		
		private System.Nullable<int> _GiftID;
		
		private System.Nullable<int> _FacilitiesID;
		
		private string _ReferenceDesc;
		
		private System.Nullable<double> _ReceiptAmount;
		
		private System.Nullable<double> _ESTAmount;
		
		private System.Nullable<System.DateTime> _Date;
		
		public HistoryReceipt()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreID", DbType="Int")]
		public System.Nullable<int> IngreID
		{
			get
			{
				return this._IngreID;
			}
			set
			{
				if ((this._IngreID != value))
				{
					this._IngreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftID", DbType="Int")]
		public System.Nullable<int> GiftID
		{
			get
			{
				return this._GiftID;
			}
			set
			{
				if ((this._GiftID != value))
				{
					this._GiftID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesID", DbType="Int")]
		public System.Nullable<int> FacilitiesID
		{
			get
			{
				return this._FacilitiesID;
			}
			set
			{
				if ((this._FacilitiesID != value))
				{
					this._FacilitiesID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceDesc", DbType="NVarChar(50)")]
		public string ReferenceDesc
		{
			get
			{
				return this._ReferenceDesc;
			}
			set
			{
				if ((this._ReferenceDesc != value))
				{
					this._ReferenceDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptAmount", DbType="Float")]
		public System.Nullable<double> ReceiptAmount
		{
			get
			{
				return this._ReceiptAmount;
			}
			set
			{
				if ((this._ReceiptAmount != value))
				{
					this._ReceiptAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTAmount", DbType="Float")]
		public System.Nullable<double> ESTAmount
		{
			get
			{
				return this._ESTAmount;
			}
			set
			{
				if ((this._ESTAmount != value))
				{
					this._ESTAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryTimeSheet")]
	public partial class HistoryTimeSheet
	{
		
		private System.Nullable<int> _TimeSheetID;
		
		private System.Nullable<int> _EmployeeID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<System.TimeSpan> _TimeIn;
		
		private System.Nullable<System.TimeSpan> _TimeOut;
		
		private System.Nullable<double> _Bonus;
		
		private string _Desc;
		
		public HistoryTimeSheet()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSheetID", DbType="Int")]
		public System.Nullable<int> TimeSheetID
		{
			get
			{
				return this._TimeSheetID;
			}
			set
			{
				if ((this._TimeSheetID != value))
				{
					this._TimeSheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIn", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeIn
		{
			get
			{
				return this._TimeIn;
			}
			set
			{
				if ((this._TimeIn != value))
				{
					this._TimeIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOut", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeOut
		{
			get
			{
				return this._TimeOut;
			}
			set
			{
				if ((this._TimeOut != value))
				{
					this._TimeOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Float")]
		public System.Nullable<double> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this._Bonus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InfoIndex")]
	public partial class InfoIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InfoIndexID;
		
		private string _BannerInfo;
		
		private string _BookTile;
		
		private string _BookInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInfoIndexIDChanging(int value);
    partial void OnInfoIndexIDChanged();
    partial void OnBannerInfoChanging(string value);
    partial void OnBannerInfoChanged();
    partial void OnBookTileChanging(string value);
    partial void OnBookTileChanged();
    partial void OnBookInfoChanging(string value);
    partial void OnBookInfoChanged();
    #endregion
		
		public InfoIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoIndexID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InfoIndexID
		{
			get
			{
				return this._InfoIndexID;
			}
			set
			{
				if ((this._InfoIndexID != value))
				{
					this.OnInfoIndexIDChanging(value);
					this.SendPropertyChanging();
					this._InfoIndexID = value;
					this.SendPropertyChanged("InfoIndexID");
					this.OnInfoIndexIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerInfo", DbType="NVarChar(100)")]
		public string BannerInfo
		{
			get
			{
				return this._BannerInfo;
			}
			set
			{
				if ((this._BannerInfo != value))
				{
					this.OnBannerInfoChanging(value);
					this.SendPropertyChanging();
					this._BannerInfo = value;
					this.SendPropertyChanged("BannerInfo");
					this.OnBannerInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookTile", DbType="NVarChar(100)")]
		public string BookTile
		{
			get
			{
				return this._BookTile;
			}
			set
			{
				if ((this._BookTile != value))
				{
					this.OnBookTileChanging(value);
					this.SendPropertyChanging();
					this._BookTile = value;
					this.SendPropertyChanged("BookTile");
					this.OnBookTileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookInfo", DbType="NVarChar(100)")]
		public string BookInfo
		{
			get
			{
				return this._BookInfo;
			}
			set
			{
				if ((this._BookInfo != value))
				{
					this.OnBookInfoChanging(value);
					this.SendPropertyChanging();
					this._BookInfo = value;
					this.SendPropertyChanged("BookInfo");
					this.OnBookInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IngredientMessage")]
	public partial class IngredientMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IngreMessageID;
		
		private int _IngreID;
		
		private System.Nullable<int> _EmployeeID;
		
		private double _Amount;
		
		private string _Unit;
		
		private System.DateTime _MessageDateTime;
		
		private System.Nullable<System.DateTime> _ConfirmDateTime;
		
		private string _SendMessage;
		
		private string _ReceiveMessage;
		
		private string _Status;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Ingredient> _Ingredient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIngreMessageIDChanging(int value);
    partial void OnIngreMessageIDChanged();
    partial void OnIngreIDChanging(int value);
    partial void OnIngreIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnMessageDateTimeChanging(System.DateTime value);
    partial void OnMessageDateTimeChanged();
    partial void OnConfirmDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateTimeChanged();
    partial void OnSendMessageChanging(string value);
    partial void OnSendMessageChanged();
    partial void OnReceiveMessageChanging(string value);
    partial void OnReceiveMessageChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public IngredientMessage()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Ingredient = default(EntityRef<Ingredient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IngreMessageID
		{
			get
			{
				return this._IngreMessageID;
			}
			set
			{
				if ((this._IngreMessageID != value))
				{
					this.OnIngreMessageIDChanging(value);
					this.SendPropertyChanging();
					this._IngreMessageID = value;
					this.SendPropertyChanged("IngreMessageID");
					this.OnIngreMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreID", DbType="Int NOT NULL")]
		public int IngreID
		{
			get
			{
				return this._IngreID;
			}
			set
			{
				if ((this._IngreID != value))
				{
					if (this._Ingredient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIngreIDChanging(value);
					this.SendPropertyChanging();
					this._IngreID = value;
					this.SendPropertyChanged("IngreID");
					this.OnIngreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime MessageDateTime
		{
			get
			{
				return this._MessageDateTime;
			}
			set
			{
				if ((this._MessageDateTime != value))
				{
					this.OnMessageDateTimeChanging(value);
					this.SendPropertyChanging();
					this._MessageDateTime = value;
					this.SendPropertyChanged("MessageDateTime");
					this.OnMessageDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDateTime
		{
			get
			{
				return this._ConfirmDateTime;
			}
			set
			{
				if ((this._ConfirmDateTime != value))
				{
					this.OnConfirmDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDateTime = value;
					this.SendPropertyChanged("ConfirmDateTime");
					this.OnConfirmDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendMessage", DbType="NVarChar(MAX)")]
		public string SendMessage
		{
			get
			{
				return this._SendMessage;
			}
			set
			{
				if ((this._SendMessage != value))
				{
					this.OnSendMessageChanging(value);
					this.SendPropertyChanging();
					this._SendMessage = value;
					this.SendPropertyChanged("SendMessage");
					this.OnSendMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveMessage", DbType="NVarChar(MAX)")]
		public string ReceiveMessage
		{
			get
			{
				return this._ReceiveMessage;
			}
			set
			{
				if ((this._ReceiveMessage != value))
				{
					this.OnReceiveMessageChanging(value);
					this.SendPropertyChanging();
					this._ReceiveMessage = value;
					this.SendPropertyChanged("ReceiveMessage");
					this.OnReceiveMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_IngredientMessage", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.IngredientMessages.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.IngredientMessages.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_IngredientMessage", Storage="_Ingredient", ThisKey="IngreID", OtherKey="IngreID", IsForeignKey=true)]
		public Ingredient Ingredient
		{
			get
			{
				return this._Ingredient.Entity;
			}
			set
			{
				Ingredient previousValue = this._Ingredient.Entity;
				if (((previousValue != value) 
							|| (this._Ingredient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingredient.Entity = null;
						previousValue.IngredientMessages.Remove(this);
					}
					this._Ingredient.Entity = value;
					if ((value != null))
					{
						value.IngredientMessages.Add(this);
						this._IngreID = value.IngreID;
					}
					else
					{
						this._IngreID = default(int);
					}
					this.SendPropertyChanged("Ingredient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ingredients")]
	public partial class Ingredient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IngreID;
		
		private int _SupplierID;
		
		private string _Name;
		
		private double _Amount;
		
		private string _Unit;
		
		private double _UnitPrice;
		
		private string _Currency;
		
		private EntitySet<IngredientMessage> _IngredientMessages;
		
		private EntitySet<IngredientsMapSupplier> _IngredientsMapSuppliers;
		
		private EntitySet<ReceiptDetail> _ReceiptDetails;
		
		private EntitySet<RecipeDetail> _RecipeDetails;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIngreIDChanging(int value);
    partial void OnIngreIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnUnitPriceChanging(double value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    #endregion
		
		public Ingredient()
		{
			this._IngredientMessages = new EntitySet<IngredientMessage>(new Action<IngredientMessage>(this.attach_IngredientMessages), new Action<IngredientMessage>(this.detach_IngredientMessages));
			this._IngredientsMapSuppliers = new EntitySet<IngredientsMapSupplier>(new Action<IngredientsMapSupplier>(this.attach_IngredientsMapSuppliers), new Action<IngredientsMapSupplier>(this.detach_IngredientsMapSuppliers));
			this._ReceiptDetails = new EntitySet<ReceiptDetail>(new Action<ReceiptDetail>(this.attach_ReceiptDetails), new Action<ReceiptDetail>(this.detach_ReceiptDetails));
			this._RecipeDetails = new EntitySet<RecipeDetail>(new Action<RecipeDetail>(this.attach_RecipeDetails), new Action<RecipeDetail>(this.detach_RecipeDetails));
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IngreID
		{
			get
			{
				return this._IngreID;
			}
			set
			{
				if ((this._IngreID != value))
				{
					this.OnIngreIDChanging(value);
					this.SendPropertyChanging();
					this._IngreID = value;
					this.SendPropertyChanged("IngreID");
					this.OnIngreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float NOT NULL")]
		public double UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_IngredientMessage", Storage="_IngredientMessages", ThisKey="IngreID", OtherKey="IngreID")]
		public EntitySet<IngredientMessage> IngredientMessages
		{
			get
			{
				return this._IngredientMessages;
			}
			set
			{
				this._IngredientMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_IngredientsMapSupplier", Storage="_IngredientsMapSuppliers", ThisKey="IngreID", OtherKey="IngreID")]
		public EntitySet<IngredientsMapSupplier> IngredientsMapSuppliers
		{
			get
			{
				return this._IngredientsMapSuppliers;
			}
			set
			{
				this._IngredientsMapSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_ReceiptDetail", Storage="_ReceiptDetails", ThisKey="IngreID", OtherKey="IngreID")]
		public EntitySet<ReceiptDetail> ReceiptDetails
		{
			get
			{
				return this._ReceiptDetails;
			}
			set
			{
				this._ReceiptDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_RecipeDetail", Storage="_RecipeDetails", ThisKey="IngreID", OtherKey="IngreID")]
		public EntitySet<RecipeDetail> RecipeDetails
		{
			get
			{
				return this._RecipeDetails;
			}
			set
			{
				this._RecipeDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Ingredient", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Ingredients.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Ingredients.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IngredientMessages(IngredientMessage entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = this;
		}
		
		private void detach_IngredientMessages(IngredientMessage entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = null;
		}
		
		private void attach_IngredientsMapSuppliers(IngredientsMapSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = this;
		}
		
		private void detach_IngredientsMapSuppliers(IngredientsMapSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = null;
		}
		
		private void attach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = this;
		}
		
		private void detach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = null;
		}
		
		private void attach_RecipeDetails(RecipeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = this;
		}
		
		private void detach_RecipeDetails(RecipeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Ingredient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IngredientsMapSupplier")]
	public partial class IngredientsMapSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IngreMapSupID;
		
		private int _IngreID;
		
		private int _SupplierID;
		
		private EntityRef<Ingredient> _Ingredient;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIngreMapSupIDChanging(int value);
    partial void OnIngreMapSupIDChanged();
    partial void OnIngreIDChanging(int value);
    partial void OnIngreIDChanged();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    #endregion
		
		public IngredientsMapSupplier()
		{
			this._Ingredient = default(EntityRef<Ingredient>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreMapSupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IngreMapSupID
		{
			get
			{
				return this._IngreMapSupID;
			}
			set
			{
				if ((this._IngreMapSupID != value))
				{
					this.OnIngreMapSupIDChanging(value);
					this.SendPropertyChanging();
					this._IngreMapSupID = value;
					this.SendPropertyChanged("IngreMapSupID");
					this.OnIngreMapSupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreID", DbType="Int NOT NULL")]
		public int IngreID
		{
			get
			{
				return this._IngreID;
			}
			set
			{
				if ((this._IngreID != value))
				{
					if (this._Ingredient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIngreIDChanging(value);
					this.SendPropertyChanging();
					this._IngreID = value;
					this.SendPropertyChanged("IngreID");
					this.OnIngreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_IngredientsMapSupplier", Storage="_Ingredient", ThisKey="IngreID", OtherKey="IngreID", IsForeignKey=true)]
		public Ingredient Ingredient
		{
			get
			{
				return this._Ingredient.Entity;
			}
			set
			{
				Ingredient previousValue = this._Ingredient.Entity;
				if (((previousValue != value) 
							|| (this._Ingredient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingredient.Entity = null;
						previousValue.IngredientsMapSuppliers.Remove(this);
					}
					this._Ingredient.Entity = value;
					if ((value != null))
					{
						value.IngredientsMapSuppliers.Add(this);
						this._IngreID = value.IngreID;
					}
					else
					{
						this._IngreID = default(int);
					}
					this.SendPropertyChanged("Ingredient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_IngredientsMapSupplier", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.IngredientsMapSuppliers.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.IngredientsMapSuppliers.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IngreExchange")]
	public partial class IngreExchange
	{
		
		private int _IngreID;
		
		private int _FDID;
		
		private double _Amount;
		
		private string _Unit;
		
		private int _Quantity;
		
		public IngreExchange()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IngreID
		{
			get
			{
				return this._IngreID;
			}
			set
			{
				if ((this._IngreID != value))
				{
					this._IngreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", DbType="Int NOT NULL")]
		public int FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					this._FDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuID;
		
		private string _MenuName;
		
		private string _MenuHref;
		
		private EntitySet<MenuDetail> _MenuDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuHrefChanging(string value);
    partial void OnMenuHrefChanged();
    #endregion
		
		public Menu()
		{
			this._MenuDetails = new EntitySet<MenuDetail>(new Action<MenuDetail>(this.attach_MenuDetails), new Action<MenuDetail>(this.detach_MenuDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuHref", DbType="VarChar(100)")]
		public string MenuHref
		{
			get
			{
				return this._MenuHref;
			}
			set
			{
				if ((this._MenuHref != value))
				{
					this.OnMenuHrefChanging(value);
					this.SendPropertyChanging();
					this._MenuHref = value;
					this.SendPropertyChanged("MenuHref");
					this.OnMenuHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuDetail", Storage="_MenuDetails", ThisKey="MenuID", OtherKey="MenuID")]
		public EntitySet<MenuDetail> MenuDetails
		{
			get
			{
				return this._MenuDetails;
			}
			set
			{
				this._MenuDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MenuDetails(MenuDetail entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_MenuDetails(MenuDetail entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuDetail")]
	public partial class MenuDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuDetailID;
		
		private System.Nullable<int> _MenuID;
		
		private string _MenuDetailName;
		
		private string _MenuDetailHref;
		
		private EntityRef<Menu> _Menu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuDetailIDChanging(int value);
    partial void OnMenuDetailIDChanged();
    partial void OnMenuIDChanging(System.Nullable<int> value);
    partial void OnMenuIDChanged();
    partial void OnMenuDetailNameChanging(string value);
    partial void OnMenuDetailNameChanged();
    partial void OnMenuDetailHrefChanging(string value);
    partial void OnMenuDetailHrefChanged();
    #endregion
		
		public MenuDetail()
		{
			this._Menu = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MenuDetailID
		{
			get
			{
				return this._MenuDetailID;
			}
			set
			{
				if ((this._MenuDetailID != value))
				{
					this.OnMenuDetailIDChanging(value);
					this.SendPropertyChanging();
					this._MenuDetailID = value;
					this.SendPropertyChanged("MenuDetailID");
					this.OnMenuDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int")]
		public System.Nullable<int> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuDetailName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuDetailName
		{
			get
			{
				return this._MenuDetailName;
			}
			set
			{
				if ((this._MenuDetailName != value))
				{
					this.OnMenuDetailNameChanging(value);
					this.SendPropertyChanging();
					this._MenuDetailName = value;
					this.SendPropertyChanged("MenuDetailName");
					this.OnMenuDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuDetailHref", DbType="VarChar(100)")]
		public string MenuDetailHref
		{
			get
			{
				return this._MenuDetailHref;
			}
			set
			{
				if ((this._MenuDetailHref != value))
				{
					this.OnMenuDetailHrefChanging(value);
					this.SendPropertyChanging();
					this._MenuDetailHref = value;
					this.SendPropertyChanged("MenuDetailHref");
					this.OnMenuDetailHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuDetail", Storage="_Menu", ThisKey="MenuID", OtherKey="MenuID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.MenuDetails.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.MenuDetails.Add(this);
						this._MenuID = value.MenuID;
					}
					else
					{
						this._MenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _PosID;
		
		private System.DateTime _OrderDateTime;
		
		private System.DateTime _PaidDateTime;
		
		private System.Nullable<double> _DiscountMoney;
		
		private double _TotalAmount;
		
		private string _Currency;
		
		private string _Desc;
		
		private string _Status;
		
		private EntitySet<OrderItem> _OrderItems;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Position> _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnPosIDChanging(System.Nullable<int> value);
    partial void OnPosIDChanged();
    partial void OnOrderDateTimeChanging(System.DateTime value);
    partial void OnOrderDateTimeChanged();
    partial void OnPaidDateTimeChanging(System.DateTime value);
    partial void OnPaidDateTimeChanged();
    partial void OnDiscountMoneyChanging(System.Nullable<double> value);
    partial void OnDiscountMoneyChanged();
    partial void OnTotalAmountChanging(double value);
    partial void OnTotalAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Order()
		{
			this._OrderItems = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItems), new Action<OrderItem>(this.detach_OrderItems));
			this._Customer = default(EntityRef<Customer>);
			this._Position = default(EntityRef<Position>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosID", DbType="Int")]
		public System.Nullable<int> PosID
		{
			get
			{
				return this._PosID;
			}
			set
			{
				if ((this._PosID != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPosIDChanging(value);
					this.SendPropertyChanging();
					this._PosID = value;
					this.SendPropertyChanged("PosID");
					this.OnPosIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDateTime
		{
			get
			{
				return this._OrderDateTime;
			}
			set
			{
				if ((this._OrderDateTime != value))
				{
					this.OnOrderDateTimeChanging(value);
					this.SendPropertyChanging();
					this._OrderDateTime = value;
					this.SendPropertyChanged("OrderDateTime");
					this.OnOrderDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime PaidDateTime
		{
			get
			{
				return this._PaidDateTime;
			}
			set
			{
				if ((this._PaidDateTime != value))
				{
					this.OnPaidDateTimeChanging(value);
					this.SendPropertyChanging();
					this._PaidDateTime = value;
					this.SendPropertyChanged("PaidDateTime");
					this.OnPaidDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountMoney", DbType="Float")]
		public System.Nullable<double> DiscountMoney
		{
			get
			{
				return this._DiscountMoney;
			}
			set
			{
				if ((this._DiscountMoney != value))
				{
					this.OnDiscountMoneyChanging(value);
					this.SendPropertyChanging();
					this._DiscountMoney = value;
					this.SendPropertyChanged("DiscountMoney");
					this.OnDiscountMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Float NOT NULL")]
		public double TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_OrderItems", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<OrderItem> OrderItems
		{
			get
			{
				return this._OrderItems;
			}
			set
			{
				this._OrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Order", Storage="_Position", ThisKey="PosID", OtherKey="PosID", IsForeignKey=true)]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._PosID = value.PosID;
					}
					else
					{
						this._PosID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderItems(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItem")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderItemID;
		
		private int _OrderID;
		
		private int _FDID;
		
		private int _Quantity;
		
		private string _Desc;
		
		private string _Status;
		
		private EntityRef<FoodAndDrink> _FoodAndDrink;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderItemIDChanging(int value);
    partial void OnOrderItemIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnFDIDChanging(int value);
    partial void OnFDIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public OrderItem()
		{
			this._FoodAndDrink = default(EntityRef<FoodAndDrink>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderItemID
		{
			get
			{
				return this._OrderItemID;
			}
			set
			{
				if ((this._OrderItemID != value))
				{
					this.OnOrderItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderItemID = value;
					this.SendPropertyChanged("OrderItemID");
					this.OnOrderItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", DbType="Int NOT NULL")]
		public int FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					if (this._FoodAndDrink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFDIDChanging(value);
					this.SendPropertyChanging();
					this._FDID = value;
					this.SendPropertyChanged("FDID");
					this.OnFDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodAndDrink_OrderItem", Storage="_FoodAndDrink", ThisKey="FDID", OtherKey="FDID", IsForeignKey=true)]
		public FoodAndDrink FoodAndDrink
		{
			get
			{
				return this._FoodAndDrink.Entity;
			}
			set
			{
				FoodAndDrink previousValue = this._FoodAndDrink.Entity;
				if (((previousValue != value) 
							|| (this._FoodAndDrink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FoodAndDrink.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._FoodAndDrink.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._FDID = value.FDID;
					}
					else
					{
						this._FDID = default(int);
					}
					this.SendPropertyChanged("FoodAndDrink");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderItems.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderItems.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPromotion")]
	public partial class OrderPromotion
	{
		
		private int _OrderID;
		
		private System.Nullable<int> _PromotionID;
		
		public OrderPromotion()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int")]
		public System.Nullable<int> PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this._PromotionID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Position")]
	public partial class Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PosID;
		
		private string _Status;
		
		private string _Desc;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPosIDChanging(int value);
    partial void OnPosIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    #endregion
		
		public Position()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PosID
		{
			get
			{
				return this._PosID;
			}
			set
			{
				if ((this._PosID != value))
				{
					this.OnPosIDChanging(value);
					this.SendPropertyChanging();
					this._PosID = value;
					this.SendPropertyChanged("PosID");
					this.OnPosIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Order", Storage="_Orders", ThisKey="PosID", OtherKey="PosID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Reservation", Storage="_Reservations", ThisKey="PosID", OtherKey="PosID")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotion")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromotionID;
		
		private string _Name;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _Desc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotionIDChanging(int value);
    partial void OnPromotionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    #endregion
		
		public Promotion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this.OnPromotionIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionID = value;
					this.SendPropertyChanged("PromotionID");
					this.OnPromotionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProOnDrinkQuantity")]
	public partial class ProOnDrinkQuantity
	{
		
		private int _PromotionID;
		
		private int _FDID;
		
		private int _FDQuantity;
		
		private System.Nullable<int> _PromotionFDID;
		
		private System.Nullable<int> _GiftID;
		
		private System.Nullable<int> _PromotionQuantity;
		
		private System.Nullable<double> _DiscountMoney;
		
		private string _Currency;
		
		public ProOnDrinkQuantity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int NOT NULL")]
		public int PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this._PromotionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", DbType="Int NOT NULL")]
		public int FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					this._FDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDQuantity", DbType="Int NOT NULL")]
		public int FDQuantity
		{
			get
			{
				return this._FDQuantity;
			}
			set
			{
				if ((this._FDQuantity != value))
				{
					this._FDQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionFDID", DbType="Int")]
		public System.Nullable<int> PromotionFDID
		{
			get
			{
				return this._PromotionFDID;
			}
			set
			{
				if ((this._PromotionFDID != value))
				{
					this._PromotionFDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftID", DbType="Int")]
		public System.Nullable<int> GiftID
		{
			get
			{
				return this._GiftID;
			}
			set
			{
				if ((this._GiftID != value))
				{
					this._GiftID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionQuantity", DbType="Int")]
		public System.Nullable<int> PromotionQuantity
		{
			get
			{
				return this._PromotionQuantity;
			}
			set
			{
				if ((this._PromotionQuantity != value))
				{
					this._PromotionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountMoney", DbType="Float")]
		public System.Nullable<double> DiscountMoney
		{
			get
			{
				return this._DiscountMoney;
			}
			set
			{
				if ((this._DiscountMoney != value))
				{
					this._DiscountMoney = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProOnOrderAmount")]
	public partial class ProOnOrderAmount
	{
		
		private int _PromotionID;
		
		private double _MinOrderTotalAmount;
		
		private System.Nullable<int> _GiftID;
		
		private System.Nullable<int> _PromotionFDID;
		
		private System.Nullable<int> _PromotionQuantity;
		
		private System.Nullable<double> _DiscountRate;
		
		private System.Nullable<double> _DirectDiscountMoney;
		
		private string _Currency;
		
		public ProOnOrderAmount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionID", DbType="Int NOT NULL")]
		public int PromotionID
		{
			get
			{
				return this._PromotionID;
			}
			set
			{
				if ((this._PromotionID != value))
				{
					this._PromotionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOrderTotalAmount", DbType="Float NOT NULL")]
		public double MinOrderTotalAmount
		{
			get
			{
				return this._MinOrderTotalAmount;
			}
			set
			{
				if ((this._MinOrderTotalAmount != value))
				{
					this._MinOrderTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftID", DbType="Int")]
		public System.Nullable<int> GiftID
		{
			get
			{
				return this._GiftID;
			}
			set
			{
				if ((this._GiftID != value))
				{
					this._GiftID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionFDID", DbType="Int")]
		public System.Nullable<int> PromotionFDID
		{
			get
			{
				return this._PromotionFDID;
			}
			set
			{
				if ((this._PromotionFDID != value))
				{
					this._PromotionFDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionQuantity", DbType="Int")]
		public System.Nullable<int> PromotionQuantity
		{
			get
			{
				return this._PromotionQuantity;
			}
			set
			{
				if ((this._PromotionQuantity != value))
				{
					this._PromotionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Float")]
		public System.Nullable<double> DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this._DiscountRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectDiscountMoney", DbType="Float")]
		public System.Nullable<double> DirectDiscountMoney
		{
			get
			{
				return this._DirectDiscountMoney;
			}
			set
			{
				if ((this._DirectDiscountMoney != value))
				{
					this._DirectDiscountMoney = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this._Currency = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Receipt")]
	public partial class Receipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceiptID;
		
		private System.DateTime _Date;
		
		private double _TotalAmount;
		
		private string _Currency;
		
		private string _Status;
		
		private EntitySet<ReceiptDetail> _ReceiptDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptIDChanging(int value);
    partial void OnReceiptIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTotalAmountChanging(double value);
    partial void OnTotalAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Receipt()
		{
			this._ReceiptDetails = new EntitySet<ReceiptDetail>(new Action<ReceiptDetail>(this.attach_ReceiptDetails), new Action<ReceiptDetail>(this.detach_ReceiptDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReceiptID
		{
			get
			{
				return this._ReceiptID;
			}
			set
			{
				if ((this._ReceiptID != value))
				{
					this.OnReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptID = value;
					this.SendPropertyChanged("ReceiptID");
					this.OnReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Float NOT NULL")]
		public double TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Receipt_ReceiptDetail", Storage="_ReceiptDetails", ThisKey="ReceiptID", OtherKey="ReceiptID")]
		public EntitySet<ReceiptDetail> ReceiptDetails
		{
			get
			{
				return this._ReceiptDetails;
			}
			set
			{
				this._ReceiptDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Receipt = this;
		}
		
		private void detach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Receipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptDetail")]
	public partial class ReceiptDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceiptDetailID;
		
		private int _ReceiptID;
		
		private System.Nullable<int> _IngreID;
		
		private System.Nullable<int> _GiftID;
		
		private System.Nullable<int> _FacilitiesID;
		
		private System.Nullable<int> _SupplierID;
		
		private string _ReferenceDesc;
		
		private System.Nullable<double> _Amount;
		
		private string _Unit;
		
		private System.Nullable<double> _UnitPrice;
		
		private string _Currency;
		
		private string _Status;
		
		private EntityRef<Facility> _Facility;
		
		private EntityRef<Gift> _Gift;
		
		private EntityRef<Ingredient> _Ingredient;
		
		private EntityRef<Receipt> _Receipt;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptDetailIDChanging(int value);
    partial void OnReceiptDetailIDChanged();
    partial void OnReceiptIDChanging(int value);
    partial void OnReceiptIDChanged();
    partial void OnIngreIDChanging(System.Nullable<int> value);
    partial void OnIngreIDChanged();
    partial void OnGiftIDChanging(System.Nullable<int> value);
    partial void OnGiftIDChanged();
    partial void OnFacilitiesIDChanging(System.Nullable<int> value);
    partial void OnFacilitiesIDChanged();
    partial void OnSupplierIDChanging(System.Nullable<int> value);
    partial void OnSupplierIDChanged();
    partial void OnReferenceDescChanging(string value);
    partial void OnReferenceDescChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnUnitPriceChanging(System.Nullable<double> value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public ReceiptDetail()
		{
			this._Facility = default(EntityRef<Facility>);
			this._Gift = default(EntityRef<Gift>);
			this._Ingredient = default(EntityRef<Ingredient>);
			this._Receipt = default(EntityRef<Receipt>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReceiptDetailID
		{
			get
			{
				return this._ReceiptDetailID;
			}
			set
			{
				if ((this._ReceiptDetailID != value))
				{
					this.OnReceiptDetailIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDetailID = value;
					this.SendPropertyChanged("ReceiptDetailID");
					this.OnReceiptDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptID", DbType="Int NOT NULL")]
		public int ReceiptID
		{
			get
			{
				return this._ReceiptID;
			}
			set
			{
				if ((this._ReceiptID != value))
				{
					if (this._Receipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptID = value;
					this.SendPropertyChanged("ReceiptID");
					this.OnReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreID", DbType="Int")]
		public System.Nullable<int> IngreID
		{
			get
			{
				return this._IngreID;
			}
			set
			{
				if ((this._IngreID != value))
				{
					if (this._Ingredient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIngreIDChanging(value);
					this.SendPropertyChanging();
					this._IngreID = value;
					this.SendPropertyChanged("IngreID");
					this.OnIngreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftID", DbType="Int")]
		public System.Nullable<int> GiftID
		{
			get
			{
				return this._GiftID;
			}
			set
			{
				if ((this._GiftID != value))
				{
					if (this._Gift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGiftIDChanging(value);
					this.SendPropertyChanging();
					this._GiftID = value;
					this.SendPropertyChanged("GiftID");
					this.OnGiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesID", DbType="Int")]
		public System.Nullable<int> FacilitiesID
		{
			get
			{
				return this._FacilitiesID;
			}
			set
			{
				if ((this._FacilitiesID != value))
				{
					if (this._Facility.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacilitiesIDChanging(value);
					this.SendPropertyChanging();
					this._FacilitiesID = value;
					this.SendPropertyChanged("FacilitiesID");
					this.OnFacilitiesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int")]
		public System.Nullable<int> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceDesc", DbType="NVarChar(50)")]
		public string ReferenceDesc
		{
			get
			{
				return this._ReferenceDesc;
			}
			set
			{
				if ((this._ReferenceDesc != value))
				{
					this.OnReferenceDescChanging(value);
					this.SendPropertyChanging();
					this._ReferenceDesc = value;
					this.SendPropertyChanged("ReferenceDesc");
					this.OnReferenceDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facility_ReceiptDetail", Storage="_Facility", ThisKey="FacilitiesID", OtherKey="FacilitiesID", IsForeignKey=true)]
		public Facility Facility
		{
			get
			{
				return this._Facility.Entity;
			}
			set
			{
				Facility previousValue = this._Facility.Entity;
				if (((previousValue != value) 
							|| (this._Facility.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Facility.Entity = null;
						previousValue.ReceiptDetails.Remove(this);
					}
					this._Facility.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetails.Add(this);
						this._FacilitiesID = value.FacilitiesID;
					}
					else
					{
						this._FacilitiesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Facility");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gift_ReceiptDetail", Storage="_Gift", ThisKey="GiftID", OtherKey="GiftID", IsForeignKey=true)]
		public Gift Gift
		{
			get
			{
				return this._Gift.Entity;
			}
			set
			{
				Gift previousValue = this._Gift.Entity;
				if (((previousValue != value) 
							|| (this._Gift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gift.Entity = null;
						previousValue.ReceiptDetails.Remove(this);
					}
					this._Gift.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetails.Add(this);
						this._GiftID = value.GiftID;
					}
					else
					{
						this._GiftID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gift");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_ReceiptDetail", Storage="_Ingredient", ThisKey="IngreID", OtherKey="IngreID", IsForeignKey=true)]
		public Ingredient Ingredient
		{
			get
			{
				return this._Ingredient.Entity;
			}
			set
			{
				Ingredient previousValue = this._Ingredient.Entity;
				if (((previousValue != value) 
							|| (this._Ingredient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingredient.Entity = null;
						previousValue.ReceiptDetails.Remove(this);
					}
					this._Ingredient.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetails.Add(this);
						this._IngreID = value.IngreID;
					}
					else
					{
						this._IngreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ingredient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Receipt_ReceiptDetail", Storage="_Receipt", ThisKey="ReceiptID", OtherKey="ReceiptID", IsForeignKey=true)]
		public Receipt Receipt
		{
			get
			{
				return this._Receipt.Entity;
			}
			set
			{
				Receipt previousValue = this._Receipt.Entity;
				if (((previousValue != value) 
							|| (this._Receipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Receipt.Entity = null;
						previousValue.ReceiptDetails.Remove(this);
					}
					this._Receipt.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetails.Add(this);
						this._ReceiptID = value.ReceiptID;
					}
					else
					{
						this._ReceiptID = default(int);
					}
					this.SendPropertyChanged("Receipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ReceiptDetail", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ReceiptDetails.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetails.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recipe")]
	public partial class Recipe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecID;
		
		private int _FDID;
		
		private EntitySet<RecipeDetail> _RecipeDetails;
		
		private EntityRef<FoodAndDrink> _FoodAndDrink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecIDChanging(int value);
    partial void OnRecIDChanged();
    partial void OnFDIDChanging(int value);
    partial void OnFDIDChanged();
    #endregion
		
		public Recipe()
		{
			this._RecipeDetails = new EntitySet<RecipeDetail>(new Action<RecipeDetail>(this.attach_RecipeDetails), new Action<RecipeDetail>(this.detach_RecipeDetails));
			this._FoodAndDrink = default(EntityRef<FoodAndDrink>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecID
		{
			get
			{
				return this._RecID;
			}
			set
			{
				if ((this._RecID != value))
				{
					this.OnRecIDChanging(value);
					this.SendPropertyChanging();
					this._RecID = value;
					this.SendPropertyChanged("RecID");
					this.OnRecIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", DbType="Int NOT NULL")]
		public int FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					if (this._FoodAndDrink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFDIDChanging(value);
					this.SendPropertyChanging();
					this._FDID = value;
					this.SendPropertyChanged("FDID");
					this.OnFDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_RecipeDetail", Storage="_RecipeDetails", ThisKey="RecID", OtherKey="RecID")]
		public EntitySet<RecipeDetail> RecipeDetails
		{
			get
			{
				return this._RecipeDetails;
			}
			set
			{
				this._RecipeDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodAndDrink_Recipe", Storage="_FoodAndDrink", ThisKey="FDID", OtherKey="FDID", IsForeignKey=true)]
		public FoodAndDrink FoodAndDrink
		{
			get
			{
				return this._FoodAndDrink.Entity;
			}
			set
			{
				FoodAndDrink previousValue = this._FoodAndDrink.Entity;
				if (((previousValue != value) 
							|| (this._FoodAndDrink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FoodAndDrink.Entity = null;
						previousValue.Recipes.Remove(this);
					}
					this._FoodAndDrink.Entity = value;
					if ((value != null))
					{
						value.Recipes.Add(this);
						this._FDID = value.FDID;
					}
					else
					{
						this._FDID = default(int);
					}
					this.SendPropertyChanged("FoodAndDrink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecipeDetails(RecipeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = this;
		}
		
		private void detach_RecipeDetails(RecipeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipeDetail")]
	public partial class RecipeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecipeDetailID;
		
		private int _RecID;
		
		private int _Step;
		
		private int _IngreID;
		
		private double _Amount;
		
		private string _Unit;
		
		private string _Desc;
		
		private EntityRef<Ingredient> _Ingredient;
		
		private EntityRef<Recipe> _Recipe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecipeDetailIDChanging(int value);
    partial void OnRecipeDetailIDChanged();
    partial void OnRecIDChanging(int value);
    partial void OnRecIDChanged();
    partial void OnStepChanging(int value);
    partial void OnStepChanged();
    partial void OnIngreIDChanging(int value);
    partial void OnIngreIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    #endregion
		
		public RecipeDetail()
		{
			this._Ingredient = default(EntityRef<Ingredient>);
			this._Recipe = default(EntityRef<Recipe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecipeDetailID
		{
			get
			{
				return this._RecipeDetailID;
			}
			set
			{
				if ((this._RecipeDetailID != value))
				{
					this.OnRecipeDetailIDChanging(value);
					this.SendPropertyChanging();
					this._RecipeDetailID = value;
					this.SendPropertyChanged("RecipeDetailID");
					this.OnRecipeDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecID", DbType="Int NOT NULL")]
		public int RecID
		{
			get
			{
				return this._RecID;
			}
			set
			{
				if ((this._RecID != value))
				{
					if (this._Recipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecIDChanging(value);
					this.SendPropertyChanging();
					this._RecID = value;
					this.SendPropertyChanged("RecID");
					this.OnRecIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Step", DbType="Int NOT NULL")]
		public int Step
		{
			get
			{
				return this._Step;
			}
			set
			{
				if ((this._Step != value))
				{
					this.OnStepChanging(value);
					this.SendPropertyChanging();
					this._Step = value;
					this.SendPropertyChanged("Step");
					this.OnStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngreID", DbType="Int NOT NULL")]
		public int IngreID
		{
			get
			{
				return this._IngreID;
			}
			set
			{
				if ((this._IngreID != value))
				{
					if (this._Ingredient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIngreIDChanging(value);
					this.SendPropertyChanging();
					this._IngreID = value;
					this.SendPropertyChanged("IngreID");
					this.OnIngreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingredient_RecipeDetail", Storage="_Ingredient", ThisKey="IngreID", OtherKey="IngreID", IsForeignKey=true)]
		public Ingredient Ingredient
		{
			get
			{
				return this._Ingredient.Entity;
			}
			set
			{
				Ingredient previousValue = this._Ingredient.Entity;
				if (((previousValue != value) 
							|| (this._Ingredient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingredient.Entity = null;
						previousValue.RecipeDetails.Remove(this);
					}
					this._Ingredient.Entity = value;
					if ((value != null))
					{
						value.RecipeDetails.Add(this);
						this._IngreID = value.IngreID;
					}
					else
					{
						this._IngreID = default(int);
					}
					this.SendPropertyChanged("Ingredient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_RecipeDetail", Storage="_Recipe", ThisKey="RecID", OtherKey="RecID", IsForeignKey=true)]
		public Recipe Recipe
		{
			get
			{
				return this._Recipe.Entity;
			}
			set
			{
				Recipe previousValue = this._Recipe.Entity;
				if (((previousValue != value) 
							|| (this._Recipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recipe.Entity = null;
						previousValue.RecipeDetails.Remove(this);
					}
					this._Recipe.Entity = value;
					if ((value != null))
					{
						value.RecipeDetails.Add(this);
						this._RecID = value.RecID;
					}
					else
					{
						this._RecID = default(int);
					}
					this.SendPropertyChanged("Recipe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservation")]
	public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResvID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _PosID;
		
		private string _CustName;
		
		private string _Phone;
		
		private System.DateTime _ResvDateTime;
		
		private string _Desc;
		
		private string _Status;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Position> _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResvIDChanging(int value);
    partial void OnResvIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnPosIDChanging(System.Nullable<int> value);
    partial void OnPosIDChanged();
    partial void OnCustNameChanging(string value);
    partial void OnCustNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnResvDateTimeChanging(System.DateTime value);
    partial void OnResvDateTimeChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Reservation()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Position = default(EntityRef<Position>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResvID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResvID
		{
			get
			{
				return this._ResvID;
			}
			set
			{
				if ((this._ResvID != value))
				{
					this.OnResvIDChanging(value);
					this.SendPropertyChanging();
					this._ResvID = value;
					this.SendPropertyChanged("ResvID");
					this.OnResvIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosID", DbType="Int")]
		public System.Nullable<int> PosID
		{
			get
			{
				return this._PosID;
			}
			set
			{
				if ((this._PosID != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPosIDChanging(value);
					this.SendPropertyChanging();
					this._PosID = value;
					this.SendPropertyChanged("PosID");
					this.OnPosIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CustName
		{
			get
			{
				return this._CustName;
			}
			set
			{
				if ((this._CustName != value))
				{
					this.OnCustNameChanging(value);
					this.SendPropertyChanging();
					this._CustName = value;
					this.SendPropertyChanged("CustName");
					this.OnCustNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResvDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime ResvDateTime
		{
			get
			{
				return this._ResvDateTime;
			}
			set
			{
				if ((this._ResvDateTime != value))
				{
					this.OnResvDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ResvDateTime = value;
					this.SendPropertyChanged("ResvDateTime");
					this.OnResvDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Reservation", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Reservation", Storage="_Position", ThisKey="PosID", OtherKey="PosID", IsForeignKey=true)]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._PosID = value.PosID;
					}
					else
					{
						this._PosID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReservationDetail")]
	public partial class ReservationDetail
	{
		
		private int _ResvID;
		
		private System.Nullable<int> _FDID;
		
		private string _Desc;
		
		private System.Nullable<int> _Quantity;
		
		public ReservationDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResvID", DbType="Int NOT NULL")]
		public int ResvID
		{
			get
			{
				return this._ResvID;
			}
			set
			{
				if ((this._ResvID != value))
				{
					this._ResvID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDID", DbType="Int")]
		public System.Nullable<int> FDID
		{
			get
			{
				return this._FDID;
			}
			set
			{
				if ((this._FDID != value))
				{
					this._FDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this._Desc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _RoleName;
		
		private EntitySet<RoleMap> _RoleMaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public Role()
		{
			this._RoleMaps = new EntitySet<RoleMap>(new Action<RoleMap>(this.attach_RoleMaps), new Action<RoleMap>(this.detach_RoleMaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleMap", Storage="_RoleMaps", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<RoleMap> RoleMaps
		{
			get
			{
				return this._RoleMaps;
			}
			set
			{
				this._RoleMaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleMaps(RoleMap entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleMaps(RoleMap entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleMap")]
	public partial class RoleMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleMapID;
		
		private int _UserID;
		
		private int _RoleID;
		
		private string _AccType;
		
		private string _Position;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleMapIDChanging(int value);
    partial void OnRoleMapIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnAccTypeChanging(string value);
    partial void OnAccTypeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    #endregion
		
		public RoleMap()
		{
			this._Role = default(EntityRef<Role>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleMapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleMapID
		{
			get
			{
				return this._RoleMapID;
			}
			set
			{
				if ((this._RoleMapID != value))
				{
					this.OnRoleMapIDChanging(value);
					this.SendPropertyChanging();
					this._RoleMapID = value;
					this.SendPropertyChanged("RoleMapID");
					this.OnRoleMapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccType", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string AccType
		{
			get
			{
				return this._AccType;
			}
			set
			{
				if ((this._AccType != value))
				{
					this.OnAccTypeChanging(value);
					this.SendPropertyChanging();
					this._AccType = value;
					this.SendPropertyChanged("AccType");
					this.OnAccTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleMap", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleMaps.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleMaps.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_RoleMap", Storage="_Account", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.RoleMaps.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.RoleMaps.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salary")]
	public partial class Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalaryID;
		
		private string _Type;
		
		private System.Nullable<int> _Hour;
		
		private double _UnitPrice;
		
		private string _Currency;
		
		private string _Desc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalaryIDChanging(int value);
    partial void OnSalaryIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnHourChanging(System.Nullable<int> value);
    partial void OnHourChanged();
    partial void OnUnitPriceChanging(double value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    #endregion
		
		public Salary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalaryID
		{
			get
			{
				return this._SalaryID;
			}
			set
			{
				if ((this._SalaryID != value))
				{
					this.OnSalaryIDChanging(value);
					this.SendPropertyChanging();
					this._SalaryID = value;
					this.SendPropertyChanged("SalaryID");
					this.OnSalaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="Int")]
		public System.Nullable<int> Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float NOT NULL")]
		public double UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Server")]
	public partial class Server
	{
		
		private int _CustomerID;
		
		private int _EmployeeID;
		
		public Server()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shape")]
	public partial class Shape : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShapeID;
		
		private string _ImagePath;
		
		private EntitySet<CoffeeLandScapeDetail> _CoffeeLandScapeDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShapeIDChanging(int value);
    partial void OnShapeIDChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    #endregion
		
		public Shape()
		{
			this._CoffeeLandScapeDetails = new EntitySet<CoffeeLandScapeDetail>(new Action<CoffeeLandScapeDetail>(this.attach_CoffeeLandScapeDetails), new Action<CoffeeLandScapeDetail>(this.detach_CoffeeLandScapeDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShapeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShapeID
		{
			get
			{
				return this._ShapeID;
			}
			set
			{
				if ((this._ShapeID != value))
				{
					this.OnShapeIDChanging(value);
					this.SendPropertyChanging();
					this._ShapeID = value;
					this.SendPropertyChanged("ShapeID");
					this.OnShapeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shape_CoffeeLandScapeDetail", Storage="_CoffeeLandScapeDetails", ThisKey="ShapeID", OtherKey="ShapeID")]
		public EntitySet<CoffeeLandScapeDetail> CoffeeLandScapeDetails
		{
			get
			{
				return this._CoffeeLandScapeDetails;
			}
			set
			{
				this._CoffeeLandScapeDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CoffeeLandScapeDetails(CoffeeLandScapeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Shape = this;
		}
		
		private void detach_CoffeeLandScapeDetails(CoffeeLandScapeDetail entity)
		{
			this.SendPropertyChanging();
			entity.Shape = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ship")]
	public partial class Ship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShipID;
		
		private int _EmployeeID;
		
		private System.DateTime _ShipDate;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipIDChanging(int value);
    partial void OnShipIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnShipDateChanging(System.DateTime value);
    partial void OnShipDateChanged();
    #endregion
		
		public Ship()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShipID
		{
			get
			{
				return this._ShipID;
			}
			set
			{
				if ((this._ShipID != value))
				{
					this.OnShipIDChanging(value);
					this.SendPropertyChanging();
					this._ShipID = value;
					this.SendPropertyChanged("ShipID");
					this.OnShipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipDate", DbType="Date NOT NULL")]
		public System.DateTime ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this.OnShipDateChanging(value);
					this.SendPropertyChanging();
					this._ShipDate = value;
					this.SendPropertyChanged("ShipDate");
					this.OnShipDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Ship", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Ships.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Ships.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShipDetail")]
	public partial class ShipDetail
	{
		
		private int _ShipID;
		
		private int _OrderID;
		
		private string _CustName;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Status;
		
		public ShipDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipID", DbType="Int NOT NULL")]
		public int ShipID
		{
			get
			{
				return this._ShipID;
			}
			set
			{
				if ((this._ShipID != value))
				{
					this._ShipID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CustName
		{
			get
			{
				return this._CustName;
			}
			set
			{
				if ((this._CustName != value))
				{
					this._CustName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private EntitySet<Facility> _Facilities;
		
		private EntitySet<Gift> _Gifts;
		
		private EntitySet<Ingredient> _Ingredients;
		
		private EntitySet<IngredientsMapSupplier> _IngredientsMapSuppliers;
		
		private EntitySet<ReceiptDetail> _ReceiptDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Supplier()
		{
			this._Facilities = new EntitySet<Facility>(new Action<Facility>(this.attach_Facilities), new Action<Facility>(this.detach_Facilities));
			this._Gifts = new EntitySet<Gift>(new Action<Gift>(this.attach_Gifts), new Action<Gift>(this.detach_Gifts));
			this._Ingredients = new EntitySet<Ingredient>(new Action<Ingredient>(this.attach_Ingredients), new Action<Ingredient>(this.detach_Ingredients));
			this._IngredientsMapSuppliers = new EntitySet<IngredientsMapSupplier>(new Action<IngredientsMapSupplier>(this.attach_IngredientsMapSuppliers), new Action<IngredientsMapSupplier>(this.detach_IngredientsMapSuppliers));
			this._ReceiptDetails = new EntitySet<ReceiptDetail>(new Action<ReceiptDetail>(this.attach_ReceiptDetails), new Action<ReceiptDetail>(this.detach_ReceiptDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Facility", Storage="_Facilities", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<Facility> Facilities
		{
			get
			{
				return this._Facilities;
			}
			set
			{
				this._Facilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Gift", Storage="_Gifts", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<Gift> Gifts
		{
			get
			{
				return this._Gifts;
			}
			set
			{
				this._Gifts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Ingredient", Storage="_Ingredients", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<Ingredient> Ingredients
		{
			get
			{
				return this._Ingredients;
			}
			set
			{
				this._Ingredients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_IngredientsMapSupplier", Storage="_IngredientsMapSuppliers", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<IngredientsMapSupplier> IngredientsMapSuppliers
		{
			get
			{
				return this._IngredientsMapSuppliers;
			}
			set
			{
				this._IngredientsMapSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ReceiptDetail", Storage="_ReceiptDetails", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<ReceiptDetail> ReceiptDetails
		{
			get
			{
				return this._ReceiptDetails;
			}
			set
			{
				this._ReceiptDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facilities(Facility entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Facilities(Facility entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_Gifts(Gift entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Gifts(Gift entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_IngredientsMapSuppliers(IngredientsMapSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_IngredientsMapSuppliers(IngredientsMapSupplier entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ReceiptDetails(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeSheet")]
	public partial class TimeSheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimeSheetID;
		
		private int _EmployeeID;
		
		private double _TotalDay;
		
		private double _TotalAmount;
		
		private string _Currency;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeSheetIDChanging(int value);
    partial void OnTimeSheetIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnTotalDayChanging(double value);
    partial void OnTotalDayChanged();
    partial void OnTotalAmountChanging(double value);
    partial void OnTotalAmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    #endregion
		
		public TimeSheet()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSheetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimeSheetID
		{
			get
			{
				return this._TimeSheetID;
			}
			set
			{
				if ((this._TimeSheetID != value))
				{
					this.OnTimeSheetIDChanging(value);
					this.SendPropertyChanging();
					this._TimeSheetID = value;
					this.SendPropertyChanged("TimeSheetID");
					this.OnTimeSheetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDay", DbType="Float NOT NULL")]
		public double TotalDay
		{
			get
			{
				return this._TotalDay;
			}
			set
			{
				if ((this._TotalDay != value))
				{
					this.OnTotalDayChanging(value);
					this.SendPropertyChanging();
					this._TotalDay = value;
					this.SendPropertyChanged("TotalDay");
					this.OnTotalDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Float NOT NULL")]
		public double TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TimeSheet", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.TimeSheets.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.TimeSheets.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
